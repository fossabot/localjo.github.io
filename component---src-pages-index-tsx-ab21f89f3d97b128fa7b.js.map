{"version":3,"sources":["webpack:///./src/components/ASCII.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/styles/variables.ts","webpack:///./src/styles/mixins.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/normalize.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/Terminal.tsx"],"names":["figlet","parseFont","basicFont","ASCII","_ref","_ref$text","text","_ref$rainbow","rainbow","_useState","useState","ascii","setAscii","useEffect","font","_err","data","lines","split","lineColors","map","_line","line","Array","from","_c","rbgi","phase","Math","floor","sin","PI","length","getPhaseRBG","Object","core_browser_esm","react_default","a","Fragment","i","_lineColors$i","red","blue","green","key","className","style","color","IndexPage","layouts","Page","Container","Terminal","title","components_ASCII","gatsby_browser_entry","to","__webpack_require__","d","__webpack_exports__","colors","fonts","breakpoints","widths","dimensions","brand","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","sansSerif","serif","monospace","xs","sm","md","lg","xl","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","getEmSize","_variables__WEBPACK_IMPORTED_MODULE_0__","size","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","StyledPage","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","StyledContainer","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","normalize","StyledLayoutRoot","styled_base_browser_esm","name","styles","LayoutRoot","react","css","StyledLayoutMain","LayoutMain","IndexLayout","components_LayoutRoot","Helmet_default","site","siteMetadata","meta","content","description","keywords","components_LayoutMain","_991718019","Window","TitleBar","TrafficLight","Main","history"],"mappings":"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","file":"component---src-pages-index-tsx-ab21f89f3d97b128fa7b.js","sourcesContent":["import React, { FC, useState, useEffect } from 'react'\nimport figlet from 'figlet'\n// @ts-ignore\nimport basicFont from 'figlet/importable-fonts/Basic.js'\n\n// @ts-ignore\nfiglet.parseFont('Basic', basicFont)\n\ninterface ASCIIProps {\n  text?: string\n  rainbow?: boolean\n}\n\nconst ASCII: FC<ASCIIProps> = ({ text = 'Hello!', rainbow = true }) => {\n  const [ascii, setAscii] = useState<string>(text)\n\n  useEffect(() => {\n    if (text) {\n      figlet.text(text, { font: 'Basic' }, (_err, data) => setAscii(data as string))\n    }\n  })\n\n  if (rainbow) {\n    const lines = ascii.split('\\n')\n    const lineColors = lines.map((_line, line) => {\n      return Array.from('rbg').map((_c, rbgi) => getPhaseRBG(line, (rbgi * Math.PI * 2) / 3))\n    })\n    function getPhaseRBG(rbgi: number, phase: number) {\n      return Math.floor(Math.sin((Math.PI / lines.length) * 2 * rbgi + phase) * 127) + 128\n    }\n    return (\n      <>\n        <style>{`pre.rainbow {margin: 0; padding: 0;}`}</style>\n        {lines.map((line, i) => {\n          const [red, blue, green] = lineColors[i]\n          return (\n            <pre key={i} className=\"rainbow\" style={{ color: `rgb(${red},${green},${blue})` }}>\n              {line}\n            </pre>\n          )\n        })}\n      </>\n    )\n  } else {\n    return <pre>{ascii}</pre>\n  }\n}\n\nexport default ASCII\n","import * as React from 'react'\nimport { Link } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport Terminal from '../components/Terminal'\nimport IndexLayout from '../layouts'\nimport ASCII from '../components/ASCII'\n\nconst IndexPage = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <Terminal title=\"/.welcome\">\n          <h1>Welcome to my site!</h1>\n          <br />\n          <ASCII text=\"Local Jo\" />\n          <br />\n          <Link to=\"/page-2/\">Go to page 2</Link>\n        </Terminal>\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default IndexPage\n","/* eslint-disable max-len */\n\nexport const colors = {\n  brand: '#663399',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc'\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)'\n  },\n  white: '#fff',\n  black: '#000'\n}\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n}\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n}\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n}\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n}\n\nexport const heights = {\n  header: 60\n}\n","import { dimensions } from './variables'\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { dimensions } from '../styles/variables'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\n\nexport default Container\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { dimensions, fonts, colors, breakpoints } from './variables'\nimport { getEmSize } from './mixins'\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`\n","import * as React from 'react'\nimport { Global, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport normalize from '../styles/normalize'\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.FC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n)\n\nexport default LayoutMain\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\nimport '../styles/normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport LayoutMain from '../components/LayoutMain'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n    }\n  }\n}\n\nconst IndexLayout: React.FC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: data.site.siteMetadata.keywords }\n          ]}\n        />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n)\n\nexport default IndexLayout\n","import React, { FC } from 'react'\nimport styled from '@emotion/styled'\nimport { globalHistory as history } from '@reach/router'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst Window = styled.div`\n  opacity: 0.9;\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n  background: rgb(40, 44, 51);\n  color: white;\n  box-shadow: rgba(0, 0, 0, 0.1) 1px 1px, rgba(0, 0, 0, 0.1) -1px -1px, rgba(0, 0, 0, 0.1) 1px -1px, rgba(0, 0, 0, 0.1) -1px 1px,\n    rgba(0, 0, 0, 0.8) 0 0 70px;\n  border-radius: 5px;\n  overflow: scroll;\n`\nconst TitleBar = styled.div`\n  text-align: center;\n  h1 {\n    font-size: 12px;\n    color: rgb(203, 203, 203);\n    padding: 8px 0 8px 0;\n    margin: 0;\n  }\n`\n\nconst TrafficLight = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  line-height: 12px;\n  padding: 0;\n  button {\n    display: inline-block;\n    width: 12px;\n    height: 12px;\n    margin: 10px 0 0 10px;\n    border-radius: 6px;\n    appearance: none;\n    background: white;\n    border: none;\n    padding: 0;\n    &.green {\n      background: rgb(99, 199, 86);\n    }\n    &.yellow {\n      background: rgb(246, 193, 81);\n    }\n    &.red {\n      background: rgb(236, 97, 86);\n    }\n  }\n`\n\nconst Main = styled.div`\n  padding: 15px;\n  font-family: monospace;\n  font-size: 16px;\n  min-height: 600px;\n  color: rgb(199, 199, 199);\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  p {\n    font-size: inherit;\n    color: inherit;\n  }\n  code,\n  pre {\n    color: rgb(254, 125, 232);\n    margin: 0;\n    padding: 0;\n  }\n  a {\n    color: rgb(199, 199, 199);\n    text-decoration: underline;\n    &:hover {\n      background: rgb(199, 199, 199);\n      color: rgb(40, 44, 51);\n    }\n  }\n`\n\ninterface TerminalProps {\n  title?: string\n}\n\nconst Terminal: FC<TerminalProps> = ({ children, title }) => {\n  const { location } = history\n  return (\n    <Window>\n      <TitleBar>\n        <TrafficLight>\n          <button className=\"red\"></button>\n          <button className=\"yellow\"></button>\n          <button className=\"green\"></button>\n        </TrafficLight>\n        <h1>you@localjo-portfolio: ~{title || location.pathname}</h1>\n      </TitleBar>\n      <Main>{children}</Main>\n    </Window>\n  )\n}\n\nexport default Terminal\n"],"sourceRoot":""}