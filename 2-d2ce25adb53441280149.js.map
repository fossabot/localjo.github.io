{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.object.keys.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/react-input-autosize/lib/AutosizeInput.js","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/figlet/lib/figlet.js","webpack:///./node_modules/figlet/importable-fonts/Slant.js","webpack:///./node_modules/figlet/importable-fonts/Small Slant.js","webpack:///./node_modules/core-js/modules/_object-sap.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/core-js/modules/_create-property.js"],"names":["toObject","__webpack_require__","$keys","it","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","createHTML","url","Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_react","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","sizerStyle","position","top","left","visibility","height","overflow","whiteSpace","INPUT_PROPS_BLACKLIST","copyStyles","styles","node","style","fontSize","fontFamily","fontWeight","fontStyle","letterSpacing","textTransform","isIE","window","navigator","test","userAgent","generateId","Math","random","toString","substr","undefined","AutosizeInput","_Component","instance","TypeError","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","inputRef","el","input","placeHolderSizerRef","placeHolderSizer","sizerRef","sizer","state","inputWidth","minWidth","inputId","id","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","mounted","copyInputStyles","updateInputWidth","nextProps","setState","prevProps","prevState","onAutosize","getComputedStyle","inputStyles","scrollWidth","newInputWidth","placeholder","placeholderIsMinWidth","max","type","extraWidth","parseInt","focus","blur","select","injectStyles","createElement","dangerouslySetInnerHTML","__html","sizerValue","defaultValue","reduce","previousValue","currentValue","wrapperStyle","display","inputStyle","boxSizing","width","inputProps","keys","indexOf","_objectWithoutProperties","forEach","field","cleanInputProps","className","inputClassName","renderStyles","ref","propTypes","string","any","oneOfType","number","bool","func","object","onChange","defaultProps","ctx","$export","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","Array","from","arrayLike","result","step","iterator","O","C","aLen","mapfn","mapping","index","iterFn","next","done","figlet","FULL_WIDTH","FITTING","SMUSHING","CONTROLLED_SMUSHING","figFonts","figDefaults","font","fontPath","hRule1_Smush","ch1","ch2","hardBlank","hRule2_Smush","hRule3_Smush","r3_pos1","r3_pos2","abs","hRule4_Smush","r4_pos1","r4_pos2","hRule5_Smush","r5_pos1","r5_pos2","0","3","6","hRule6_Smush","vRule1_Smush","vRule2_Smush","vRule3_Smush","vRule4_Smush","vRule5_Smush","uni_Smush","canVerticalSmush","txt1","txt2","opts","fittingRules","vLayout","ii","validSmush","len","min","endSmush","vRule2","vRule3","vRule4","verticallySmushLines","line1","line2","vRule1","padLines","lines","numSpaces","padding","smushVerticalFigLines","output","len1","len2","lines1","lines2","overlap","line","piece3","piece1","slice","piece2_1","piece2_2","piece2","push","concat","verticalSmush","subLines1","subLines2","slen","ret","maxDist","curDist","getVerticalSmushDist","getHorizontalSmushLength","hLayout","seg1","seg2","breakAfter","distCal","hRule2","hRule3","hRule4","hRule5","hRule6","horizontalSmush","textBlock1","textBlock2","jj","overlapStart","outputFig","nextCh","hRule1","generateFigTextLine","txt","figChars","charIndex","figChar","row","outputFigText","printDirection","split","reverse","join","charCodeAt","showHardBlanks","replace","RegExp","getHorizontalFittingRules","layout","options","params","getVerticalFittingRules","vRule5","generateText","fontName","figLines","me","text","_reworkFontOpts","fontOpts","prop","myOpts","JSON","parse","stringify","horizontalLayout","verticalLayout","loadFont","err","textSync","loadFontSync","metadata","comment","defaults","parseFont","data","headerData","splice","figFont","baseline","maxLength","oldLayout","numCommentLines","fullLayout","codeTagCount","newLayout","val","code","rules","codes","getSmushingRules","isNaN","Error","charNums","cNum","endCharRegEx","parseError","numChars","console","log","fetch","error","then","response","ok","catch","name","preloadFonts","fonts","jQuery","when","apply","map","args","module","__webpack_exports__","core","fails","KEY","exec","fn","exp","defined","quot","tag","attribute","String","p1","NAME","P","toLowerCase","$defineProperty","createDesc"],"mappings":"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","file":"2-d2ce25adb53441280149.js","sourcesContent":["// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar sizerStyle = {\n\tposition: 'absolute',\n\ttop: 0,\n\tleft: 0,\n\tvisibility: 'hidden',\n\theight: 0,\n\toverflow: 'scroll',\n\twhiteSpace: 'pre'\n};\n\nvar INPUT_PROPS_BLACKLIST = ['extraWidth', 'injectStyles', 'inputClassName', 'inputRef', 'inputStyle', 'minWidth', 'onAutosize', 'placeholderIsMinWidth'];\n\nvar cleanInputProps = function cleanInputProps(inputProps) {\n\tINPUT_PROPS_BLACKLIST.forEach(function (field) {\n\t\treturn delete inputProps[field];\n\t});\n\treturn inputProps;\n};\n\nvar copyStyles = function copyStyles(styles, node) {\n\tnode.style.fontSize = styles.fontSize;\n\tnode.style.fontFamily = styles.fontFamily;\n\tnode.style.fontWeight = styles.fontWeight;\n\tnode.style.fontStyle = styles.fontStyle;\n\tnode.style.letterSpacing = styles.letterSpacing;\n\tnode.style.textTransform = styles.textTransform;\n};\n\nvar isIE = typeof window !== 'undefined' && window.navigator ? /MSIE |Trident\\/|Edge\\//.test(window.navigator.userAgent) : false;\n\nvar generateId = function generateId() {\n\t// we only need an auto-generated ID for stylesheet injection, which is only\n\t// used for IE. so if the browser is not IE, this should return undefined.\n\treturn isIE ? '_' + Math.random().toString(36).substr(2, 12) : undefined;\n};\n\nvar AutosizeInput = function (_Component) {\n\t_inherits(AutosizeInput, _Component);\n\n\tfunction AutosizeInput(props) {\n\t\t_classCallCheck(this, AutosizeInput);\n\n\t\tvar _this = _possibleConstructorReturn(this, (AutosizeInput.__proto__ || Object.getPrototypeOf(AutosizeInput)).call(this, props));\n\n\t\t_this.inputRef = function (el) {\n\t\t\t_this.input = el;\n\t\t\tif (typeof _this.props.inputRef === 'function') {\n\t\t\t\t_this.props.inputRef(el);\n\t\t\t}\n\t\t};\n\n\t\t_this.placeHolderSizerRef = function (el) {\n\t\t\t_this.placeHolderSizer = el;\n\t\t};\n\n\t\t_this.sizerRef = function (el) {\n\t\t\t_this.sizer = el;\n\t\t};\n\n\t\t_this.state = {\n\t\t\tinputWidth: props.minWidth,\n\t\t\tinputId: props.id || generateId()\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(AutosizeInput, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tthis.mounted = true;\n\t\t\tthis.copyInputStyles();\n\t\t\tthis.updateInputWidth();\n\t\t}\n\t}, {\n\t\tkey: 'UNSAFE_componentWillReceiveProps',\n\t\tvalue: function UNSAFE_componentWillReceiveProps(nextProps) {\n\t\t\tvar id = nextProps.id;\n\n\t\t\tif (id !== this.props.id) {\n\t\t\t\tthis.setState({ inputId: id || generateId() });\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentDidUpdate',\n\t\tvalue: function componentDidUpdate(prevProps, prevState) {\n\t\t\tif (prevState.inputWidth !== this.state.inputWidth) {\n\t\t\t\tif (typeof this.props.onAutosize === 'function') {\n\t\t\t\t\tthis.props.onAutosize(this.state.inputWidth);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateInputWidth();\n\t\t}\n\t}, {\n\t\tkey: 'componentWillUnmount',\n\t\tvalue: function componentWillUnmount() {\n\t\t\tthis.mounted = false;\n\t\t}\n\t}, {\n\t\tkey: 'copyInputStyles',\n\t\tvalue: function copyInputStyles() {\n\t\t\tif (!this.mounted || !window.getComputedStyle) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar inputStyles = this.input && window.getComputedStyle(this.input);\n\t\t\tif (!inputStyles) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcopyStyles(inputStyles, this.sizer);\n\t\t\tif (this.placeHolderSizer) {\n\t\t\t\tcopyStyles(inputStyles, this.placeHolderSizer);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'updateInputWidth',\n\t\tvalue: function updateInputWidth() {\n\t\t\tif (!this.mounted || !this.sizer || typeof this.sizer.scrollWidth === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar newInputWidth = void 0;\n\t\t\tif (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {\n\t\t\t\tnewInputWidth = Math.max(this.sizer.scrollWidth, this.placeHolderSizer.scrollWidth) + 2;\n\t\t\t} else {\n\t\t\t\tnewInputWidth = this.sizer.scrollWidth + 2;\n\t\t\t}\n\t\t\t// add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI\n\t\t\tvar extraWidth = this.props.type === 'number' && this.props.extraWidth === undefined ? 16 : parseInt(this.props.extraWidth) || 0;\n\t\t\tnewInputWidth += extraWidth;\n\t\t\tif (newInputWidth < this.props.minWidth) {\n\t\t\t\tnewInputWidth = this.props.minWidth;\n\t\t\t}\n\t\t\tif (newInputWidth !== this.state.inputWidth) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinputWidth: newInputWidth\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getInput',\n\t\tvalue: function getInput() {\n\t\t\treturn this.input;\n\t\t}\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.input.focus();\n\t\t}\n\t}, {\n\t\tkey: 'blur',\n\t\tvalue: function blur() {\n\t\t\tthis.input.blur();\n\t\t}\n\t}, {\n\t\tkey: 'select',\n\t\tvalue: function select() {\n\t\t\tthis.input.select();\n\t\t}\n\t}, {\n\t\tkey: 'renderStyles',\n\t\tvalue: function renderStyles() {\n\t\t\t// this method injects styles to hide IE's clear indicator, which messes\n\t\t\t// with input size detection. the stylesheet is only injected when the\n\t\t\t// browser is IE, and can also be disabled by the `injectStyles` prop.\n\t\t\tvar injectStyles = this.props.injectStyles;\n\n\t\t\treturn isIE && injectStyles ? _react2.default.createElement('style', { dangerouslySetInnerHTML: {\n\t\t\t\t\t__html: 'input#' + this.state.inputId + '::-ms-clear {display: none;}'\n\t\t\t\t} }) : null;\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar sizerValue = [this.props.defaultValue, this.props.value, ''].reduce(function (previousValue, currentValue) {\n\t\t\t\tif (previousValue !== null && previousValue !== undefined) {\n\t\t\t\t\treturn previousValue;\n\t\t\t\t}\n\t\t\t\treturn currentValue;\n\t\t\t});\n\n\t\t\tvar wrapperStyle = _extends({}, this.props.style);\n\t\t\tif (!wrapperStyle.display) wrapperStyle.display = 'inline-block';\n\n\t\t\tvar inputStyle = _extends({\n\t\t\t\tboxSizing: 'content-box',\n\t\t\t\twidth: this.state.inputWidth + 'px'\n\t\t\t}, this.props.inputStyle);\n\n\t\t\tvar inputProps = _objectWithoutProperties(this.props, []);\n\n\t\t\tcleanInputProps(inputProps);\n\t\t\tinputProps.className = this.props.inputClassName;\n\t\t\tinputProps.id = this.state.inputId;\n\t\t\tinputProps.style = inputStyle;\n\n\t\t\treturn _react2.default.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: this.props.className, style: wrapperStyle },\n\t\t\t\tthis.renderStyles(),\n\t\t\t\t_react2.default.createElement('input', _extends({}, inputProps, { ref: this.inputRef })),\n\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: this.sizerRef, style: sizerStyle },\n\t\t\t\t\tsizerValue\n\t\t\t\t),\n\t\t\t\tthis.props.placeholder ? _react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: this.placeHolderSizerRef, style: sizerStyle },\n\t\t\t\t\tthis.props.placeholder\n\t\t\t\t) : null\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn AutosizeInput;\n}(_react.Component);\n\nAutosizeInput.propTypes = {\n\tclassName: _propTypes2.default.string, // className for the outer element\n\tdefaultValue: _propTypes2.default.any, // default field value\n\textraWidth: _propTypes2.default.oneOfType([// additional width for input element\n\t_propTypes2.default.number, _propTypes2.default.string]),\n\tid: _propTypes2.default.string, // id to use for the input, can be set for consistent snapshots\n\tinjectStyles: _propTypes2.default.bool, // inject the custom stylesheet to hide clear UI, defaults to true\n\tinputClassName: _propTypes2.default.string, // className for the input element\n\tinputRef: _propTypes2.default.func, // ref callback for the input element\n\tinputStyle: _propTypes2.default.object, // css styles for the input element\n\tminWidth: _propTypes2.default.oneOfType([// minimum width for input element\n\t_propTypes2.default.number, _propTypes2.default.string]),\n\tonAutosize: _propTypes2.default.func, // onAutosize handler: function(newWidth) {}\n\tonChange: _propTypes2.default.func, // onChange handler: function(event) {}\n\tplaceholder: _propTypes2.default.string, // placeholder text\n\tplaceholderIsMinWidth: _propTypes2.default.bool, // don't collapse size to less than the placeholder\n\tstyle: _propTypes2.default.object, // css styles for the outer element\n\tvalue: _propTypes2.default.any // field value\n};\nAutosizeInput.defaultProps = {\n\tminWidth: 1,\n\tinjectStyles: true\n};\n\nexports.default = AutosizeInput;","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","/*\n    FIGlet.js (a FIGDriver for FIGlet fonts)\n    By Patrick Gillespie (patorjk@gmail.com)\n    Originally Written For: http://patorjk.com/software/taag/\n    License: MIT (with this header staying intact)\n\n    This JavaScript code aims to fully implement the FIGlet spec.\n    Full FIGlet spec: http://patorjk.com/software/taag/docs/figfont.txt\n\n    FIGlet fonts are actually kind of complex, which is why you will see\n    a lot of code about parsing and interpreting rules. The actual generation\n    code is pretty simple and is done near the bottom of the code.\n*/\n\n\"use strict\";\n\nvar figlet = figlet || (function() {\n    \n    // ---------------------------------------------------------------------\n    // Private static variables\n\n    var FULL_WIDTH = 0,\n        FITTING = 1,\n        SMUSHING = 2,\n        CONTROLLED_SMUSHING = 3;\n\n    // ---------------------------------------------------------------------\n    // Variable that will hold information about the fonts\n\n    var figFonts = {}; // What stores all of the FIGlet font data\n    var figDefaults = {\n        font: 'Standard',\n        fontPath: './fonts'\n    };\n\n    // ---------------------------------------------------------------------\n    // Private static methods\n\n    /*\n        This method takes in the oldLayout and newLayout data from the FIGfont header file and returns\n        the layout information.\n    */\n    function getSmushingRules(oldLayout, newLayout) {\n        var rules = {};\n        var val, index, len, code;\n        var codes = [[16384,\"vLayout\",SMUSHING], [8192,\"vLayout\",FITTING], [4096, \"vRule5\", true], [2048, \"vRule4\", true],\n                     [1024, \"vRule3\", true], [512, \"vRule2\", true], [256, \"vRule1\", true], [128, \"hLayout\", SMUSHING],\n                     [64, \"hLayout\", FITTING], [32, \"hRule6\", true], [16, \"hRule5\", true], [8, \"hRule4\", true], [4, \"hRule3\", true],\n                     [2, \"hRule2\", true], [1, \"hRule1\", true]];\n\n        val = (newLayout !== null) ? newLayout : oldLayout;\n        index = 0;\n        len = codes.length;\n        while ( index < len ) {\n            code = codes[index];\n            if (val >= code[0]) {\n                val = val - code[0];\n                rules[code[1]] = (typeof rules[code[1]] === \"undefined\") ? code[2] : rules[code[1]];\n            } else if (code[1] !== \"vLayout\" && code[1] !== \"hLayout\") {\n                rules[code[1]] = false;\n            }\n            index++;\n        }\n\n        if (typeof rules[\"hLayout\"] === \"undefined\") {\n            if (oldLayout === 0) {\n                rules[\"hLayout\"] = FITTING;\n            } else if (oldLayout === -1) {\n                rules[\"hLayout\"] = FULL_WIDTH;\n            } else {\n                if (rules[\"hRule1\"] || rules[\"hRule2\"] || rules[\"hRule3\"] || rules[\"hRule4\"] ||rules[\"hRule5\"] || rules[\"hRule6\"] ) {\n                    rules[\"hLayout\"] = CONTROLLED_SMUSHING;\n                } else {\n                    rules[\"hLayout\"] = SMUSHING;\n                }\n            }\n        } else if (rules[\"hLayout\"] === SMUSHING) {\n            if (rules[\"hRule1\"] || rules[\"hRule2\"] || rules[\"hRule3\"] || rules[\"hRule4\"] ||rules[\"hRule5\"] || rules[\"hRule6\"] ) {\n                rules[\"hLayout\"] = CONTROLLED_SMUSHING;\n            }\n        }\n\n        if (typeof rules[\"vLayout\"] === \"undefined\") {\n            if (rules[\"vRule1\"] || rules[\"vRule2\"] || rules[\"vRule3\"] || rules[\"vRule4\"] ||rules[\"vRule5\"]  ) {\n                rules[\"vLayout\"] = CONTROLLED_SMUSHING;\n            } else {\n                rules[\"vLayout\"] = FULL_WIDTH;\n            }\n        } else if (rules[\"vLayout\"] === SMUSHING) {\n            if (rules[\"vRule1\"] || rules[\"vRule2\"] || rules[\"vRule3\"] || rules[\"vRule4\"] ||rules[\"vRule5\"]  ) {\n                rules[\"vLayout\"] = CONTROLLED_SMUSHING;\n            }\n        }\n\n        return rules;\n    }\n\n    /* The [vh]Rule[1-6]_Smush functions return the smushed character OR false if the two characters can't be smushed */\n\n    /*\n        Rule 1: EQUAL CHARACTER SMUSHING (code value 1)\n\n            Two sub-characters are smushed into a single sub-character\n            if they are the same.  This rule does not smush\n            hardblanks.  (See rule 6 on hardblanks below)\n    */\n    function hRule1_Smush(ch1, ch2, hardBlank) {\n        if (ch1 === ch2 && ch1 !== hardBlank) {return ch1;}\n        return false;\n    }\n\n    /*\n        Rule 2: UNDERSCORE SMUSHING (code value 2)\n\n            An underscore (\"_\") will be replaced by any of: \"|\", \"/\",\n            \"\\\", \"[\", \"]\", \"{\", \"}\", \"(\", \")\", \"<\" or \">\".\n    */\n    function hRule2_Smush(ch1, ch2) {\n        var rule2Str = \"|/\\\\[]{}()<>\";\n        if (ch1 === \"_\") {\n            if (rule2Str.indexOf(ch2) !== -1) {return ch2;}\n        } else if (ch2 === \"_\") {\n            if (rule2Str.indexOf(ch1) !== -1) {return ch1;}\n        }\n        return false;\n    }\n\n    /*\n        Rule 3: HIERARCHY SMUSHING (code value 4)\n\n            A hierarchy of six classes is used: \"|\", \"/\\\", \"[]\", \"{}\",\n            \"()\", and \"<>\".  When two smushing sub-characters are\n            from different classes, the one from the latter class\n            will be used.\n    */\n    function hRule3_Smush(ch1, ch2) {\n        var rule3Classes = \"| /\\\\ [] {} () <>\";\n        var r3_pos1 = rule3Classes.indexOf(ch1);\n        var r3_pos2 = rule3Classes.indexOf(ch2);\n        if (r3_pos1 !== -1 && r3_pos2 !== -1) {\n            if (r3_pos1 !== r3_pos2 && Math.abs(r3_pos1-r3_pos2) !== 1) {\n                return rule3Classes.substr(Math.max(r3_pos1,r3_pos2), 1);\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 4: OPPOSITE PAIR SMUSHING (code value 8)\n\n            Smushes opposing brackets (\"[]\" or \"][\"), braces (\"{}\" or\n            \"}{\") and parentheses (\"()\" or \")(\") together, replacing\n            any such pair with a vertical bar (\"|\").\n    */\n    function hRule4_Smush(ch1, ch2) {\n        var rule4Str = \"[] {} ()\";\n        var r4_pos1 = rule4Str.indexOf(ch1);\n        var r4_pos2 = rule4Str.indexOf(ch2);\n        if (r4_pos1 !== -1 && r4_pos2 !== -1) {\n            if (Math.abs(r4_pos1-r4_pos2) <= 1) {\n                return \"|\";\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 5: BIG X SMUSHING (code value 16)\n\n            Smushes \"/\\\" into \"|\", \"\\/\" into \"Y\", and \"><\" into \"X\".\n            Note that \"<>\" is not smushed in any way by this rule.\n            The name \"BIG X\" is historical; originally all three pairs\n            were smushed into \"X\".\n    */\n    function hRule5_Smush(ch1, ch2) {\n        var rule5Str = \"/\\\\ \\\\/ ><\";\n        var rule5Hash = {\"0\": \"|\", \"3\": \"Y\", \"6\": \"X\"};\n        var r5_pos1 = rule5Str.indexOf(ch1);\n        var r5_pos2 = rule5Str.indexOf(ch2);\n        if (r5_pos1 !== -1 && r5_pos2 !== -1) {\n            if ((r5_pos2-r5_pos1) === 1) {\n                return rule5Hash[r5_pos1];\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 6: HARDBLANK SMUSHING (code value 32)\n\n            Smushes two hardblanks together, replacing them with a\n            single hardblank.  (See \"Hardblanks\" below.)\n    */\n    function hRule6_Smush(ch1, ch2, hardBlank) {\n        if (ch1 === hardBlank && ch2 === hardBlank) {\n            return hardBlank;\n        }\n        return false;\n    }\n\n    /*\n        Rule 1: EQUAL CHARACTER SMUSHING (code value 256)\n\n            Same as horizontal smushing rule 1.\n    */\n    function vRule1_Smush(ch1, ch2) {\n        if (ch1 === ch2) {return ch1;}\n        return false;\n    }\n\n    /*\n        Rule 2: UNDERSCORE SMUSHING (code value 512)\n\n            Same as horizontal smushing rule 2.\n    */\n    function vRule2_Smush(ch1, ch2) {\n        var rule2Str = \"|/\\\\[]{}()<>\";\n        if (ch1 === \"_\") {\n            if (rule2Str.indexOf(ch2) !== -1) {return ch2;}\n        } else if (ch2 === \"_\") {\n            if (rule2Str.indexOf(ch1) !== -1) {return ch1;}\n        }\n        return false;\n    }\n\n    /*\n        Rule 3: HIERARCHY SMUSHING (code value 1024)\n\n            Same as horizontal smushing rule 3.\n    */\n    function vRule3_Smush(ch1, ch2) {\n        var rule3Classes = \"| /\\\\ [] {} () <>\";\n        var r3_pos1 = rule3Classes.indexOf(ch1);\n        var r3_pos2 = rule3Classes.indexOf(ch2);\n        if (r3_pos1 !== -1 && r3_pos2 !== -1) {\n            if (r3_pos1 !== r3_pos2 && Math.abs(r3_pos1-r3_pos2) !== 1) {\n                return rule3Classes.substr(Math.max(r3_pos1,r3_pos2), 1);\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 4: HORIZONTAL LINE SMUSHING (code value 2048)\n\n            Smushes stacked pairs of \"-\" and \"_\", replacing them with\n            a single \"=\" sub-character.  It does not matter which is\n            found above the other.  Note that vertical smushing rule 1\n            will smush IDENTICAL pairs of horizontal lines, while this\n            rule smushes horizontal lines consisting of DIFFERENT\n            sub-characters.\n    */\n    function vRule4_Smush(ch1, ch2) {\n        if ( (ch1 === \"-\" && ch2 === \"_\") || (ch1 === \"_\" && ch2 === \"-\") ) {\n            return \"=\";\n        }\n        return false;\n    }\n\n    /*\n        Rule 5: VERTICAL LINE SUPERSMUSHING (code value 4096)\n\n            This one rule is different from all others, in that it\n            \"supersmushes\" vertical lines consisting of several\n            vertical bars (\"|\").  This creates the illusion that\n            FIGcharacters have slid vertically against each other.\n            Supersmushing continues until any sub-characters other\n            than \"|\" would have to be smushed.  Supersmushing can\n            produce impressive results, but it is seldom possible,\n            since other sub-characters would usually have to be\n            considered for smushing as soon as any such stacked\n            vertical lines are encountered.\n    */\n    function vRule5_Smush(ch1, ch2) {\n        if ( ch1 === \"|\" && ch2 === \"|\" ) {\n            return \"|\";\n        }\n        return false;\n    }\n\n    /*\n        Universal smushing simply overrides the sub-character from the\n        earlier FIGcharacter with the sub-character from the later\n        FIGcharacter.  This produces an \"overlapping\" effect with some\n        FIGfonts, wherin the latter FIGcharacter may appear to be \"in\n        front\".\n    */\n    function uni_Smush(ch1, ch2, hardBlank) {\n        if (ch2 === \" \" || ch2 === \"\") {\n            return ch1;\n        } else if (ch2 === hardBlank && ch1 !== \" \") {\n            return ch1;\n        } else {\n            return ch2;\n        }\n    }\n\n    // --------------------------------------------------------------------------\n    // main vertical smush routines (excluding rules)\n\n    /*\n        txt1 - A line of text\n        txt2 - A line of text\n        opts - FIGlet options array\n\n        About: Takes in two lines of text and returns one of the following:\n        \"valid\" - These lines can be smushed together given the current smushing rules\n        \"end\" - The lines can be smushed, but we're at a stopping point\n        \"invalid\" - The two lines cannot be smushed together\n    */\n    function canVerticalSmush(txt1, txt2, opts) {\n        if (opts.fittingRules.vLayout === FULL_WIDTH) {return \"invalid\";}\n        var ii, len = Math.min(txt1.length, txt2.length);\n        var ch1, ch2, endSmush = false, validSmush;\n        if (len===0) {return \"invalid\";}\n\n        for (ii = 0; ii < len; ii++) {\n            ch1 = txt1.substr(ii,1);\n            ch2 = txt2.substr(ii,1);\n            if (ch1 !== \" \" && ch2 !== \" \") {\n                if (opts.fittingRules.vLayout === FITTING) {\n                    return \"invalid\";\n                } else if (opts.fittingRules.vLayout === SMUSHING) {\n                    return \"end\";\n                } else {\n                    if (vRule5_Smush(ch1,ch2)) {endSmush = endSmush || false; continue;} // rule 5 allow for \"super\" smushing, but only if we're not already ending this smush\n                    validSmush = false;\n                    validSmush = (opts.fittingRules.vRule1) ? vRule1_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule2) ? vRule2_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule3) ? vRule3_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule4) ? vRule4_Smush(ch1,ch2) : validSmush;\n                    endSmush = true;\n                    if (!validSmush) {return \"invalid\";}\n                }\n            }\n        }\n        if (endSmush) {\n            return \"end\";\n        } else {\n            return \"valid\";\n        }\n    }\n\n    function getVerticalSmushDist(lines1, lines2, opts) {\n        var maxDist = lines1.length;\n        var len1 = lines1.length;\n        var len2 = lines2.length;\n        var subLines1, subLines2, slen;\n        var curDist = 1;\n        var ii, ret, result;\n        while (curDist <= maxDist) {\n\n            subLines1 = lines1.slice(Math.max(0,len1-curDist), len1);\n            subLines2 = lines2.slice(0, Math.min(maxDist, curDist));\n\n            slen = subLines2.length;//TODO:check this\n            result = \"\";\n            for (ii = 0; ii < slen; ii++) {\n                ret = canVerticalSmush(subLines1[ii], subLines2[ii], opts);\n                if (ret === \"end\") {\n                    result = ret;\n                } else if (ret === \"invalid\") {\n                    result = ret;\n                    break;\n                } else {\n                    if (result === \"\") {\n                        result = \"valid\";\n                    }\n                }\n            }\n\n            if (result === \"invalid\") {curDist--;break;}\n            if (result === \"end\") {break;}\n            if (result === \"valid\") {curDist++;}\n        }\n\n        return Math.min(maxDist,curDist);\n    }\n\n    function verticallySmushLines(line1, line2, opts) {\n        var ii, len = Math.min(line1.length, line2.length);\n        var ch1, ch2, result = \"\", validSmush;\n\n        for (ii = 0; ii < len; ii++) {\n            ch1 = line1.substr(ii,1);\n            ch2 = line2.substr(ii,1);\n            if (ch1 !== \" \" && ch2 !== \" \") {\n                if (opts.fittingRules.vLayout === FITTING) {\n                    result += uni_Smush(ch1,ch2);\n                } else if (opts.fittingRules.vLayout === SMUSHING) {\n                    result += uni_Smush(ch1,ch2);\n                } else {\n                    validSmush = (opts.fittingRules.vRule5) ? vRule5_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule1) ? vRule1_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule2) ? vRule2_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule3) ? vRule3_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule4) ? vRule4_Smush(ch1,ch2) : validSmush;\n                    result += validSmush;\n                }\n            } else {\n                result += uni_Smush(ch1,ch2);\n            }\n        }\n        return result;\n    }\n\n    function verticalSmush(lines1, lines2, overlap, opts) {\n        var len1 = lines1.length;\n        var len2 = lines2.length;\n        var piece1 = lines1.slice(0, Math.max(0,len1-overlap));\n        var piece2_1 = lines1.slice(Math.max(0,len1-overlap), len1);\n        var piece2_2 = lines2.slice(0, Math.min(overlap, len2));\n        var ii, len, line, piece2 = [], piece3, result = [];\n\n        len = piece2_1.length;\n        for (ii = 0; ii < len; ii++) {\n            if (ii >= len2) {\n                line = piece2_1[ii];\n            } else {\n                line = verticallySmushLines(piece2_1[ii], piece2_2[ii], opts);\n            }\n            piece2.push(line);\n        }\n\n        piece3 = lines2.slice(Math.min(overlap,len2), len2);\n\n        return result.concat(piece1,piece2,piece3);\n    }\n\n    function padLines(lines, numSpaces) {\n        var ii, len = lines.length, padding = \"\";\n        for (ii = 0; ii < numSpaces; ii++) {\n            padding += \" \";\n        }\n        for (ii = 0; ii < len; ii++) {\n            lines[ii] += padding;\n        }\n    }\n\n    function smushVerticalFigLines(output, lines, opts) {\n        var len1 = output[0].length;\n        var len2 = lines[0].length;\n        var overlap;\n        if (len1 > len2) {\n            padLines(lines, len1-len2);\n        } else if (len2 > len1) {\n            padLines(output, len2-len1);\n        }\n        overlap = getVerticalSmushDist(output, lines, opts);\n        return verticalSmush(output, lines, overlap,opts);\n    }\n\n    // -------------------------------------------------------------------------\n    // Main horizontal smush routines (excluding rules)\n\n    function getHorizontalSmushLength(txt1, txt2, opts) {\n        if (opts.fittingRules.hLayout === FULL_WIDTH) {return 0;}\n        var ii, len1 = txt1.length, len2 = txt2.length;\n        var maxDist = len1;\n        var curDist = 1;\n        var breakAfter = false;\n        var validSmush = false;\n        var seg1, seg2, ch1, ch2;\n        if (len1 === 0) {return 0;}\n\n        distCal: while (curDist <= maxDist) {\n            seg1 = txt1.substr(len1-curDist,curDist);\n            seg2 = txt2.substr(0,Math.min(curDist,len2));\n            for (ii = 0; ii < Math.min(curDist,len2); ii++) {\n                ch1 = seg1.substr(ii,1);\n                ch2 = seg2.substr(ii,1);\n                if (ch1 !== \" \" && ch2 !== \" \" ) {\n                    if (opts.fittingRules.hLayout === FITTING) {\n                        curDist = curDist - 1;\n                        break distCal;\n                    } else if (opts.fittingRules.hLayout === SMUSHING) {\n                        if (ch1 === opts.hardBlank || ch2 === opts.hardBlank) {\n                            curDist = curDist - 1; // universal smushing does not smush hardblanks\n                        }\n                        break distCal;\n                    } else {\n                        breakAfter = true; // we know we need to break, but we need to check if our smushing rules will allow us to smush the overlapped characters\n                        validSmush = false; // the below checks will let us know if we can smush these characters\n\n                        validSmush = (opts.fittingRules.hRule1) ? hRule1_Smush(ch1,ch2,opts.hardBlank) : validSmush;\n                        validSmush = (!validSmush && opts.fittingRules.hRule2) ? hRule2_Smush(ch1,ch2,opts.hardBlank) : validSmush;\n                        validSmush = (!validSmush && opts.fittingRules.hRule3) ? hRule3_Smush(ch1,ch2,opts.hardBlank) : validSmush;\n                        validSmush = (!validSmush && opts.fittingRules.hRule4) ? hRule4_Smush(ch1,ch2,opts.hardBlank) : validSmush;\n                        validSmush = (!validSmush && opts.fittingRules.hRule5) ? hRule5_Smush(ch1,ch2,opts.hardBlank) : validSmush;\n                        validSmush = (!validSmush && opts.fittingRules.hRule6) ? hRule6_Smush(ch1,ch2,opts.hardBlank) : validSmush;\n\n                        if (!validSmush) {\n                            curDist = curDist - 1;\n                            break distCal;\n                        }\n                    }\n                }\n            }\n            if (breakAfter) {break;}\n            curDist++;\n        }\n        return Math.min(maxDist,curDist);\n    }\n\n    function horizontalSmush(textBlock1, textBlock2, overlap, opts) {\n        var ii, jj, ch, outputFig = [],\n            overlapStart,piece1,piece2,piece3,len1,len2,txt1,txt2;\n\n        for (ii = 0; ii < opts.height; ii++) {\n            txt1 = textBlock1[ii];\n            txt2 = textBlock2[ii];\n            len1 = txt1.length;\n            len2 = txt2.length;\n            overlapStart = len1-overlap;\n            piece1 = txt1.substr(0,Math.max(0,overlapStart));\n            piece2 = \"\";\n\n            // determine overlap piece\n            var seg1 = txt1.substr(Math.max(0,len1-overlap),overlap);\n            var seg2 = txt2.substr(0,Math.min(overlap,len2));\n\n            for (jj = 0; jj < overlap; jj++) {\n                var ch1 = (jj < len1) ? seg1.substr(jj,1) : \" \";\n                var ch2 = (jj < len2) ? seg2.substr(jj,1) : \" \";\n\n                if (ch1 !== \" \" && ch2 !== \" \") {\n                    if (opts.fittingRules.hLayout === FITTING) {\n                        piece2 += uni_Smush(ch1, ch2, opts.hardBlank);\n                    } else if (opts.fittingRules.hLayout === SMUSHING) {\n                        piece2 += uni_Smush(ch1, ch2, opts.hardBlank);\n                    } else {\n                        // Controlled Smushing\n                        var nextCh = \"\";\n                        nextCh = (!nextCh && opts.fittingRules.hRule1) ? hRule1_Smush(ch1,ch2,opts.hardBlank) : nextCh;\n                        nextCh = (!nextCh && opts.fittingRules.hRule2) ? hRule2_Smush(ch1,ch2,opts.hardBlank) : nextCh;\n                        nextCh = (!nextCh && opts.fittingRules.hRule3) ? hRule3_Smush(ch1,ch2,opts.hardBlank) : nextCh;\n                        nextCh = (!nextCh && opts.fittingRules.hRule4) ? hRule4_Smush(ch1,ch2,opts.hardBlank) : nextCh;\n                        nextCh = (!nextCh && opts.fittingRules.hRule5) ? hRule5_Smush(ch1,ch2,opts.hardBlank) : nextCh;\n                        nextCh = (!nextCh && opts.fittingRules.hRule6) ? hRule6_Smush(ch1,ch2,opts.hardBlank) : nextCh;\n                        nextCh = nextCh || uni_Smush(ch1, ch2, opts.hardBlank);\n                        piece2 += nextCh;\n                    }\n                } else {\n                    piece2 += uni_Smush(ch1, ch2, opts.hardBlank);\n                }\n            }\n\n            if (overlap >= len2) {\n                piece3 = \"\";\n            } else {\n                piece3 = txt2.substr(overlap,Math.max(0,len2-overlap));\n            }\n            outputFig[ii] = piece1 + piece2 + piece3;\n        }\n        return outputFig;\n    }\n\n    function generateFigTextLine(txt, figChars, opts) {\n        var charIndex, figChar, overlap = 0, row, outputFigText = [], len=opts.height;\n        for (row = 0; row < len; row++) {\n            outputFigText[row] = \"\";\n        }\n        if (opts.printDirection === 1) {\n            txt = txt.split('').reverse().join('');\n        }\n        len=txt.length;\n        for (charIndex = 0; charIndex < len; charIndex++) {\n            figChar = figChars[txt.substr(charIndex,1).charCodeAt(0)];\n            if (figChar) {\n                if (opts.fittingRules.hLayout !== FULL_WIDTH) {\n                    overlap = 10000;// a value too high to be the overlap\n                    for (row = 0; row < opts.height; row++) {\n                        overlap = Math.min(overlap, getHorizontalSmushLength(outputFigText[row], figChar[row], opts));\n                    }\n                    overlap = (overlap === 10000) ? 0 : overlap;\n                }\n                outputFigText = horizontalSmush(outputFigText, figChar, overlap, opts);\n            }\n        }\n        // remove hardblanks\n        if (opts.showHardBlanks !== true) {\n            len = outputFigText.length;\n            for (row = 0; row < len; row++) {\n                outputFigText[row] = outputFigText[row].replace(new RegExp(\"\\\\\"+opts.hardBlank,\"g\"),\" \");\n            }\n        }\n        return outputFigText;\n    }\n\n    // -------------------------------------------------------------------------\n    // Parsing and Generation methods\n\n    var getHorizontalFittingRules = function(layout, options) {\n        var props = [\"hLayout\", \"hRule1\",\"hRule2\",\"hRule3\",\"hRule4\",\"hRule5\",\"hRule6\"],\n            params = {}, prop, ii;\n        if (layout === \"default\") {\n            for (ii = 0; ii < props.length; ii++) {\n                params[props[ii]] = options.fittingRules[props[ii]];\n            }\n        } else if (layout === \"full\") {\n            params = {\"hLayout\": FULL_WIDTH,\"hRule1\":false,\"hRule2\":false,\"hRule3\":false,\"hRule4\":false,\"hRule5\":false,\"hRule6\":false};\n        } else if (layout === \"fitted\") {\n            params = {\"hLayout\": FITTING,\"hRule1\":false,\"hRule2\":false,\"hRule3\":false,\"hRule4\":false,\"hRule5\":false,\"hRule6\":false};\n        } else if (layout === \"controlled smushing\") {\n            params = {\"hLayout\": CONTROLLED_SMUSHING,\"hRule1\":true,\"hRule2\":true,\"hRule3\":true,\"hRule4\":true,\"hRule5\":true,\"hRule6\":true};\n        } else if (layout === \"universal smushing\") {\n            params = {\"hLayout\": SMUSHING,\"hRule1\":false,\"hRule2\":false,\"hRule3\":false,\"hRule4\":false,\"hRule5\":false,\"hRule6\":false};\n        } else {\n            return;\n        }\n        return params;\n    };\n\n    var getVerticalFittingRules = function(layout, options) {\n        var props = [\"vLayout\", \"vRule1\",\"vRule2\",\"vRule3\",\"vRule4\",\"vRule5\"],\n            params = {}, prop, ii;\n        if (layout === \"default\") {\n            for (ii = 0; ii < props.length; ii++) {\n                params[props[ii]] = options.fittingRules[props[ii]];\n            }\n        } else if (layout === \"full\") {\n            params = {\"vLayout\": FULL_WIDTH,\"vRule1\":false,\"vRule2\":false,\"vRule3\":false,\"vRule4\":false,\"vRule5\":false};\n        } else if (layout === \"fitted\") {\n            params = {\"vLayout\": FITTING,\"vRule1\":false,\"vRule2\":false,\"vRule3\":false,\"vRule4\":false,\"vRule5\":false};\n        } else if (layout === \"controlled smushing\") {\n            params = {\"vLayout\": CONTROLLED_SMUSHING,\"vRule1\":true,\"vRule2\":true,\"vRule3\":true,\"vRule4\":true,\"vRule5\":true};\n        } else if (layout === \"universal smushing\") {\n            params = {\"vLayout\": SMUSHING,\"vRule1\":false,\"vRule2\":false,\"vRule3\":false,\"vRule4\":false,\"vRule5\":false};\n        } else {\n            return;\n        }\n        return params;\n    };\n\n    /*\n        Generates the ASCII Art\n        - fontName: Font to use\n        - option: Options to override the defaults\n        - txt: The text to make into ASCII Art\n    */\n    var generateText = function(fontName, options, txt) {\n        txt = txt.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n        var lines = txt.split(\"\\n\");\n        var figLines = [];\n        var ii, len, output;\n        len = lines.length;\n        for (ii = 0; ii < len; ii++) {\n            figLines.push( generateFigTextLine(lines[ii], figFonts[fontName], options) );\n        }\n        len = figLines.length;\n        output = figLines[0];\n        for (ii = 1; ii < len; ii++) {\n            output = smushVerticalFigLines(output, figLines[ii], options);\n        }\n\n        return output.join(\"\\n\");\n    };\n\n    // -------------------------------------------------------------------------\n    // Public methods\n\n    /*\n        A short-cut for the figlet.text method\n\n        Parameters:\n        - txt (string): The text to make into ASCII Art\n        - options (object/string - optional): Options that will override the current font's default options.\n          If a string is provided instead of an object, it is assumed to be the font name.\n\n            * font\n            * horizontalLayout\n            * verticalLayout\n            * showHardBlanks - Wont remove hardblank characters\n\n        - next (function): A callback function, it will contained the outputted ASCII Art.\n    */\n    var me = function(txt, options, next) {\n        me.text(txt, options, next);\n    };\n    me.text = function(txt, options, next) {\n        var fontName = '';\n\n        // Validate inputs\n        txt = txt + '';\n\n        if (typeof arguments[1] === 'function') {\n            next = options;\n            options = {};\n            options.font = figDefaults.font; // default font\n        }\n\n        if (typeof options === 'string') {\n            fontName = options;\n            options = {};\n        } else {\n            options = options || {};\n            fontName = options.font || figDefaults.font;\n        }\n\n        /*\n            Load the font. If it loads, it's data will be contained in the figFonts object.\n            The callback will recieve a fontsOpts object, which contains the default\n            options of the font (its fitting rules, etc etc).\n        */\n        me.loadFont(fontName, function(err, fontOpts) {\n            if (err) {\n                return next(err);\n            }\n\n            next(null, generateText(fontName, _reworkFontOpts(fontOpts, options), txt));\n        });\n    };\n\n    /*\n        Synchronous version of figlet.text.\n        Accepts the same parameters.\n     */\n    me.textSync = function(txt, options) {\n        var fontName = '';\n\n        // Validate inputs\n        txt = txt + '';\n\n        if (typeof options === 'string') {\n            fontName = options;\n            options = {};\n        } else {\n            options = options || {};\n            fontName = options.font || figDefaults.font;\n        }\n\n        var fontOpts = _reworkFontOpts(me.loadFontSync(fontName), options);\n        return generateText(fontName, fontOpts, txt);\n    };\n\n    /*\n      takes assigned options and merges them with the default options from the choosen font\n     */\n    function _reworkFontOpts(fontOpts, options) {\n        var myOpts = JSON.parse(JSON.stringify(fontOpts)), // make a copy because we may edit this (see below)\n            params,\n            prop;\n\n        /*\n         If the user is chosing to use a specific type of layout (e.g., 'full', 'fitted', etc etc)\n         Then we need to override the default font options.\n         */\n        if (typeof options.horizontalLayout !== 'undefined') {\n            params = getHorizontalFittingRules(options.horizontalLayout, fontOpts);\n            for (prop in params) {\n                myOpts.fittingRules[prop] = params[prop];\n            }\n        }\n        if (typeof options.verticalLayout !== 'undefined') {\n            params = getVerticalFittingRules(options.verticalLayout, fontOpts);\n            for (prop in params) {\n                myOpts.fittingRules[prop] = params[prop];\n            }\n        }\n        myOpts.printDirection = (typeof options.printDirection !== 'undefined') ? options.printDirection : fontOpts.printDirection;\n        myOpts.showHardBlanks = options.showHardBlanks || false;\n\n        return myOpts;\n    }\n\n    /*\n        Returns metadata about a specfic FIGlet font.\n\n        Returns:\n            next(err, options, headerComment)\n            - err: The error if an error occurred, otherwise null/falsey.\n            - options (object): The options defined for the font.\n            - headerComment (string): The font's header comment.\n    */\n    me.metadata = function(fontName, next) {\n        fontName = fontName + '';\n\n        /*\n            Load the font. If it loads, it's data will be contained in the figFonts object.\n            The callback will recieve a fontsOpts object, which contains the default\n            options of the font (its fitting rules, etc etc).\n        */\n        me.loadFont(fontName, function(err, fontOpts) {\n            if (err) {\n                next(err);\n                return;\n            }\n\n            next(null, fontOpts, figFonts[fontName].comment);\n        });\n    };\n\n    /*\n        Allows you to override defaults. See the definition of the figDefaults object up above\n        to see what properties can be overridden.\n        Returns the options for the font.\n    */\n    me.defaults = function(opts) {\n        if (typeof opts === 'object' && opts !== null) {\n            for (var prop in opts) {\n                if (opts.hasOwnProperty(prop)) {\n                    figDefaults[prop] = opts[prop];\n                }\n            }\n        }\n        return JSON.parse(JSON.stringify(figDefaults));\n    };\n\n    /*\n        Parses data from a FIGlet font file and places it into the figFonts object.\n    */\n    me.parseFont = function(fontName, data) {\n        data = data.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n        figFonts[fontName] = {};\n\n        var lines = data.split(\"\\n\");\n        var headerData = lines.splice(0,1)[0].split(\" \");\n        var figFont = figFonts[fontName];\n        var opts = {};\n\n        opts.hardBlank = headerData[0].substr(5,1);\n        opts.height = parseInt(headerData[1], 10);\n        opts.baseline = parseInt(headerData[2], 10);\n        opts.maxLength = parseInt(headerData[3], 10);\n        opts.oldLayout = parseInt(headerData[4], 10);\n        opts.numCommentLines = parseInt(headerData[5], 10);\n        opts.printDirection = (headerData.length >= 6) ? parseInt(headerData[6], 10) : 0;\n        opts.fullLayout = (headerData.length >= 7) ? parseInt(headerData[7], 10) : null;\n        opts.codeTagCount = (headerData.length >= 8) ? parseInt(headerData[8], 10) : null;\n        opts.fittingRules = getSmushingRules(opts.oldLayout, opts.fullLayout);\n\n        figFont.options = opts;\n\n        // error check\n        if (opts.hardBlank.length !== 1 ||\n            isNaN(opts.height) ||\n            isNaN(opts.baseline) ||\n            isNaN(opts.maxLength) ||\n            isNaN(opts.oldLayout) ||\n            isNaN(opts.numCommentLines) )\n        {\n            throw new Error('FIGlet header contains invalid values.');\n        }\n\n        /*\n            All FIGlet fonts must contain chars 32-126, 196, 214, 220, 228, 246, 252, 223\n        */\n\n        var charNums = [], ii;\n        for (ii = 32; ii <= 126; ii++) {\n            charNums.push(ii);\n        }\n        charNums = charNums.concat(196, 214, 220, 228, 246, 252, 223);\n\n        // error check - validate that there are enough lines in the file\n        if (lines.length < (opts.numCommentLines + (opts.height * charNums.length)) ) {\n            throw new Error('FIGlet file is missing data.');\n        }\n\n        /*\n            Parse out the context of the file and put it into our figFont object\n        */\n\n        var cNum, endCharRegEx, parseError = false;\n\n        figFont.comment = lines.splice(0,opts.numCommentLines).join(\"\\n\");\n        figFont.numChars = 0;\n\n        while (lines.length > 0 && figFont.numChars < charNums.length) {\n            cNum = charNums[figFont.numChars];\n            figFont[cNum] = lines.splice(0,opts.height);\n            // remove end sub-chars\n            for (ii = 0; ii < opts.height; ii++) {\n                if (typeof figFont[cNum][ii] === \"undefined\") {\n                    figFont[cNum][ii] = \"\";\n                } else {\n                    endCharRegEx = new RegExp(\"\\\\\"+figFont[cNum][ii].substr(figFont[cNum][ii].length-1,1)+\"+$\");\n                    figFont[cNum][ii] = figFont[cNum][ii].replace(endCharRegEx,\"\");\n                }\n            }\n            figFont.numChars++;\n        }\n\n        /*\n            Now we check to see if any additional characters are present\n        */\n\n        while (lines.length > 0) {\n            cNum = lines.splice(0,1)[0].split(\" \")[0];\n            if ( /^0[xX][0-9a-fA-F]+$/.test(cNum) ) {\n                cNum = parseInt(cNum, 16);\n            } else if ( /^0[0-7]+$/.test(cNum) ) {\n                cNum = parseInt(cNum, 8);\n            } else if ( /^[0-9]+$/.test(cNum) ) {\n                cNum = parseInt(cNum, 10);\n            } else if ( /^-0[xX][0-9a-fA-F]+$/.test(cNum) ) {\n                cNum = parseInt(cNum, 16);\n            } else {\n                if (cNum === \"\") {break;}\n                // something's wrong\n                console.log(\"Invalid data:\"+cNum);\n                parseError = true;\n                break;\n            }\n\n            figFont[cNum] = lines.splice(0,opts.height);\n            // remove end sub-chars\n            for (ii = 0; ii < opts.height; ii++) {\n                if (typeof figFont[cNum][ii] === \"undefined\") {\n                    figFont[cNum][ii] = \"\";\n                } else {\n                    endCharRegEx = new RegExp(\"\\\\\"+figFont[cNum][ii].substr(figFont[cNum][ii].length-1,1)+\"+$\");\n                    figFont[cNum][ii] = figFont[cNum][ii].replace(endCharRegEx,\"\");\n                }\n            }\n            figFont.numChars++;\n        }\n\n        // error check\n        if (parseError === true) {\n            throw new Error('Error parsing data.');\n        }\n\n        return opts;\n    };\n\n    /*\n        Loads a font.\n    */\n    me.loadFont = function(fontName, next) {\n        if (figFonts[fontName]) {\n            next(null, figFonts[fontName].options);\n            return;\n        }\n\n        if (typeof fetch !== 'function') {\n          console.error('figlet.js requires the fetch API or a fetch polyfill such as https://cdnjs.com/libraries/fetch');\n          throw new Error('fetch is required for figlet.js to work.')\n        }\n\n        fetch(figDefaults.fontPath + '/' + fontName + '.flf')\n            .then(function(response) {\n                if(response.ok) {\n                    return response.text();\n                }\n            \n                console.log('Unexpected response', response);\n                throw new Error('Network response was not ok.');\n            })\n            .then(function(text) {\n                next(null, me.parseFont(fontName, text));\n            })\n            .catch(next);\n    };\n\n    /*\n        loads a font synchronously, not implemented for the browser\n     */\n    me.loadFontSync = function(name) {\n        if (figFonts[name]) {\n          return figFonts[name].options;\n        }\n        throw new Error('synchronous font loading is not implemented for the browser');\n    };\n\n    /*\n        preloads a list of fonts prior to using textSync\n        - fonts: an array of font names (i.e. [\"Standard\",\"Soft\"])\n        - next: callback function\n     */\n    me.preloadFonts = function(fonts, next) {\n\n      if (typeof jQuery === 'undefined') { /* TODO: create common function for jQuery checks */\n          throw new Error('jQuery is required for ajax method to work.');\n      }\n\n      jQuery.when.apply(this, fonts.map(function(name){\n            return jQuery.get(figDefaults.fontPath + '/' + name + '.flf')\n          })).then(function() {\n                      var args = fonts.length > 1 ? arguments : [arguments];\n                      for(var i in fonts){\n                        me.parseFont(fonts[i], args[i][0]);\n                      }\n                      if(next)next();\n          });\n    };\n\n    me.figFonts = figFonts;\n    \n    return me;\n})();\n\n// for node.js\nif (typeof module !== 'undefined') {\n    if (typeof module.exports !== 'undefined') {\n        module.exports = figlet;\n    }\n}\n","export default `flf2a$ 6 5 16 15 10 0 18319\nSlant by Glenn Chappell 3/93 -- based on Standard\nIncludes ISO Latin-1\nfiglet release 2.1 -- 12 Aug 1994\nPermission is hereby given to modify this font, as long as the\nmodifier's name is placed on a comment line.\n\nModified by Paul Burton <solution@earthlink.net> 12/96 to include new parameter\nsupported by FIGlet and FIGWin.  May also be slightly modified for better use\nof new full-width/kern/smush alternatives, but default output is NOT changed.\n\n     $$@\n    $$ @\n   $$  @\n  $$   @\n $$    @\n$$     @@\n    __@\n   / /@\n  / / @\n /_/  @\n(_)   @\n      @@\n _ _ @\n( | )@\n|/|/ @\n $   @\n$    @\n     @@\n     __ __ @\n  __/ // /_@\n /_  _  __/@\n/_  _  __/ @\n /_//_/    @\n           @@\n     __@\n   _/ /@\n  / __/@\n (_  ) @\n/  _/  @\n/_/    @@\n   _   __@\n  (_)_/_/@\n   _/_/  @\n _/_/_   @\n/_/ (_)  @\n         @@\n   ___   @\n  ( _ )  @\n / __ \\\\/|@\n/ /_/  < @\n\\\\____/\\\\/ @\n         @@\n  _ @\n ( )@\n |/ @\n $  @\n$   @\n    @@\n     __@\n   _/_/@\n  / /  @\n / /   @\n/ /    @\n|_|    @@\n     _ @\n    | |@\n    / /@\n   / / @\n _/_/  @\n/_/    @@\n       @\n  __/|_@\n |    /@\n/_ __| @\n |/    @\n       @@\n       @\n    __ @\n __/ /_@\n/_  __/@\n /_/   @\n       @@\n   @\n   @\n   @\n _ @\n( )@\n|/ @@\n       @\n       @\n ______@\n/_____/@\n  $    @\n       @@\n   @\n   @\n   @\n _ @\n(_)@\n   @@\n       __@\n     _/_/@\n   _/_/  @\n _/_/    @\n/_/      @\n         @@\n   ____ @\n  / __ \\\\@\n / / / /@\n/ /_/ / @\n\\\\____/  @\n        @@\n   ___@\n  <  /@\n  / / @\n / /  @\n/_/   @\n      @@\n   ___ @\n  |__ \\\\@\n  __/ /@\n / __/ @\n/____/ @\n       @@\n   _____@\n  |__  /@\n   /_ < @\n ___/ / @\n/____/  @\n        @@\n   __ __@\n  / // /@\n / // /_@\n/__  __/@\n  /_/   @\n        @@\n    ______@\n   / ____/@\n  /___ \\\\  @\n ____/ /  @\n/_____/   @\n          @@\n   _____@\n  / ___/@\n / __ \\\\ @\n/ /_/ / @\n\\\\____/  @\n        @@\n _____@\n/__  /@\n  / / @\n / /  @\n/_/   @\n      @@\n   ____ @\n  ( __ )@\n / __  |@\n/ /_/ / @\n\\\\____/  @\n        @@\n   ____ @\n  / __ \\\\@\n / /_/ /@\n \\\\__, / @\n/____/  @\n        @@\n     @\n   _ @\n  (_)@\n _   @\n(_)  @\n     @@\n     @\n   _ @\n  (_)@\n _   @\n( )  @\n|/   @@\n  __@\n / /@\n/ / @\n\\\\ \\\\ @\n \\\\_\\\\@\n    @@\n       @\n  _____@\n /____/@\n/____/ @\n  $    @\n       @@\n__  @\n\\\\ \\\\ @\n \\\\ \\\\@\n / /@\n/_/ @\n    @@\n  ___ @\n /__ \\\\@\n  / _/@\n /_/  @\n(_)   @\n      @@\n   ______ @\n  / ____ \\\\@\n / / __ \\`/@\n/ / /_/ / @\n\\\\ \\\\__,_/  @\n \\\\____/   @@\n    ___ @\n   /   |@\n  / /| |@\n / ___ |@\n/_/  |_|@\n        @@\n    ____ @\n   / __ )@\n  / __  |@\n / /_/ / @\n/_____/  @\n         @@\n   ______@\n  / ____/@\n / /     @\n/ /___   @\n\\\\____/   @\n         @@\n    ____ @\n   / __ \\\\@\n  / / / /@\n / /_/ / @\n/_____/  @\n         @@\n    ______@\n   / ____/@\n  / __/   @\n / /___   @\n/_____/   @\n          @@\n    ______@\n   / ____/@\n  / /_    @\n / __/    @\n/_/       @\n          @@\n   ______@\n  / ____/@\n / / __  @\n/ /_/ /  @\n\\\\____/   @\n         @@\n    __  __@\n   / / / /@\n  / /_/ / @\n / __  /  @\n/_/ /_/   @\n          @@\n    ____@\n   /  _/@\n   / /  @\n _/ /   @\n/___/   @\n        @@\n       __@\n      / /@\n __  / / @\n/ /_/ /  @\n\\\\____/   @\n         @@\n    __ __@\n   / //_/@\n  / ,<   @\n / /| |  @\n/_/ |_|  @\n         @@\n    __ @\n   / / @\n  / /  @\n / /___@\n/_____/@\n       @@\n    __  ___@\n   /  |/  /@\n  / /|_/ / @\n / /  / /  @\n/_/  /_/   @\n           @@\n    _   __@\n   / | / /@\n  /  |/ / @\n / /|  /  @\n/_/ |_/   @\n          @@\n   ____ @\n  / __ \\\\@\n / / / /@\n/ /_/ / @\n\\\\____/  @\n        @@\n    ____ @\n   / __ \\\\@\n  / /_/ /@\n / ____/ @\n/_/      @\n         @@\n   ____ @\n  / __ \\\\@\n / / / /@\n/ /_/ / @\n\\\\___\\\\_\\\\ @\n        @@\n    ____ @\n   / __ \\\\@\n  / /_/ /@\n / _, _/ @\n/_/ |_|  @\n         @@\n   _____@\n  / ___/@\n  \\\\__ \\\\ @\n ___/ / @\n/____/  @\n        @@\n  ______@\n /_  __/@\n  / /   @\n / /    @\n/_/     @\n        @@\n   __  __@\n  / / / /@\n / / / / @\n/ /_/ /  @\n\\\\____/   @\n         @@\n _    __@\n| |  / /@\n| | / / @\n| |/ /  @\n|___/   @\n        @@\n _       __@\n| |     / /@\n| | /| / / @\n| |/ |/ /  @\n|__/|__/   @\n           @@\n   _  __@\n  | |/ /@\n  |   / @\n /   |  @\n/_/|_|  @\n        @@\n__  __@\n\\\\ \\\\/ /@\n \\\\  / @\n / /  @\n/_/   @\n      @@\n _____@\n/__  /@\n  / / @\n / /__@\n/____/@\n      @@\n     ___@\n    / _/@\n   / /  @\n  / /   @\n / /    @\n/__/    @@\n__    @\n\\\\ \\\\   @\n \\\\ \\\\  @\n  \\\\ \\\\ @\n   \\\\_\\\\@\n      @@\n     ___@\n    /  /@\n    / / @\n   / /  @\n _/ /   @\n/__/    @@\n  //|@\n |/||@\n  $  @\n $   @\n$    @\n     @@\n       @\n       @\n       @\n       @\n ______@\n/_____/@@\n  _ @\n ( )@\n  V @\n $  @\n$   @\n    @@\n        @\n  ____ _@\n / __ \\`/@\n/ /_/ / @\n\\\\__,_/  @\n        @@\n    __  @\n   / /_ @\n  / __ \\\\@\n / /_/ /@\n/_.___/ @\n        @@\n       @\n  _____@\n / ___/@\n/ /__  @\n\\\\___/  @\n       @@\n       __@\n  ____/ /@\n / __  / @\n/ /_/ /  @\n\\\\__,_/   @\n         @@\n      @\n  ___ @\n / _ \\\\@\n/  __/@\n\\\\___/ @\n      @@\n    ____@\n   / __/@\n  / /_  @\n / __/  @\n/_/     @\n        @@\n         @\n   ____ _@\n  / __ \\`/@\n / /_/ / @\n \\\\__, /  @\n/____/   @@\n    __  @\n   / /_ @\n  / __ \\\\@\n / / / /@\n/_/ /_/ @\n        @@\n    _ @\n   (_)@\n  / / @\n / /  @\n/_/   @\n      @@\n       _ @\n      (_)@\n     / / @\n    / /  @\n __/ /   @\n/___/    @@\n    __  @\n   / /__@\n  / //_/@\n / ,<   @\n/_/|_|  @\n        @@\n    __@\n   / /@\n  / / @\n / /  @\n/_/   @\n      @@\n            @\n   ____ ___ @\n  / __ \\`__ \\\\@\n / / / / / /@\n/_/ /_/ /_/ @\n            @@\n        @\n   ____ @\n  / __ \\\\@\n / / / /@\n/_/ /_/ @\n        @@\n       @\n  ____ @\n / __ \\\\@\n/ /_/ /@\n\\\\____/ @\n       @@\n         @\n    ____ @\n   / __ \\\\@\n  / /_/ /@\n / .___/ @\n/_/      @@\n        @\n  ____ _@\n / __ \\`/@\n/ /_/ / @\n\\\\__, /  @\n  /_/   @@\n        @\n   _____@\n  / ___/@\n / /    @\n/_/     @\n        @@\n        @\n   _____@\n  / ___/@\n (__  ) @\n/____/  @\n        @@\n   __ @\n  / /_@\n / __/@\n/ /_  @\n\\\\__/  @\n      @@\n        @\n  __  __@\n / / / /@\n/ /_/ / @\n\\\\__,_/  @\n        @@\n       @\n _   __@\n| | / /@\n| |/ / @\n|___/  @\n       @@\n          @\n _      __@\n| | /| / /@\n| |/ |/ / @\n|__/|__/  @\n          @@\n        @\n   _  __@\n  | |/_/@\n _>  <  @\n/_/|_|  @\n        @@\n         @\n   __  __@\n  / / / /@\n / /_/ / @\n \\\\__, /  @\n/____/   @@\n     @\n ____@\n/_  /@\n / /_@\n/___/@\n     @@\n     __@\n   _/_/@\n _/_/  @\n< <    @\n/ /    @\n\\\\_\\\\    @@\n     __@\n    / /@\n   / / @\n  / /  @\n / /   @\n/_/    @@\n     _ @\n    | |@\n    / /@\n   _>_>@\n _/_/  @\n/_/    @@\n  /\\\\//@\n //\\\\/ @\n  $   @\n $    @\n$     @\n      @@\n    _  _ @\n   (_)(_)@\n  / _ |  @\n / __ |  @\n/_/ |_|  @\n         @@\n   _   _ @\n  (_)_(_)@\n / __ \\\\  @\n/ /_/ /  @\n\\\\____/   @\n         @@\n   _   _ @\n  (_) (_)@\n / / / / @\n/ /_/ /  @\n\\\\____/   @\n         @@\n   _   _ @\n  (_)_(_)@\n / __ \\`/ @\n/ /_/ /  @\n\\\\__,_/   @\n         @@\n   _   _ @\n  (_)_(_)@\n / __ \\\\  @\n/ /_/ /  @\n\\\\____/   @\n         @@\n   _   _ @\n  (_) (_)@\n / / / / @\n/ /_/ /  @\n\\\\__,_/   @\n         @@\n     ____ @\n    / __ \\\\@\n   / / / /@\n  / /_| | @\n / //__/  @\n/_/       @@\n160  NO-BREAK SPACE\n     $$@\n    $$ @\n   $$  @\n  $$   @\n $$    @\n$$     @@\n161  INVERTED EXCLAMATION MARK\n    _ @\n   (_)@\n  / / @\n / /  @\n/_/   @\n      @@\n162  CENT SIGN\n     __@\n  __/ /@\n / ___/@\n/ /__  @\n\\\\  _/  @\n/_/    @@\n163  POUND SIGN\n     ____ @\n    / ,__\\\\@\n __/ /_   @\n _/ /___  @\n(_,____/  @\n          @@\n164  CURRENCY SIGN\n    /|___/|@\n   | __  / @\n  / /_/ /  @\n /___  |   @\n|/   |/    @\n           @@\n165  YEN SIGN\n    ____@\n  _| / /@\n /_  __/@\n/_  __/ @\n /_/    @\n        @@\n166  BROKEN BAR\n     __@\n    / /@\n   /_/ @\n  __   @\n / /   @\n/_/    @@\n167  SECTION SIGN\n     __ @\n   _/ _)@\n  / | | @\n | || | @\n | |_/  @\n(__/    @@\n168  DIAERESIS\n  _   _ @\n (_) (_)@\n  $   $ @\n $   $  @\n$   $   @\n        @@\n169  COPYRIGHT SIGN\n    ______  @\n   / _____\\\\ @\n  / / ___/ |@\n / / /__  / @\n|  \\\\___/ /  @\n \\\\______/   @@\n170  FEMININE ORDINAL INDICATOR\n   ___ _@\n  / _ \\`/@\n _\\\\_,_/ @\n/____/  @\n $      @\n        @@\n171  LEFT-POINTING DOUBLE ANGLE QUOTATION MARK\n  ____@\n / / /@\n/ / / @\n\\\\ \\\\ \\\\ @\n \\\\_\\\\_\\\\@\n      @@\n172  NOT SIGN\n       @\n ______@\n/___  /@\n   /_/ @\n $     @\n       @@\n173  SOFT HYPHEN\n      @\n      @\n _____@\n/____/@\n  $   @\n      @@\n174  REGISTERED SIGN\n    ______  @\n   / ___  \\\\ @\n  / / _ \\\\  |@\n / / , _/ / @\n| /_/|_| /  @\n \\\\______/   @@\n175  MACRON\n ______@\n/_____/@\n  $    @\n $     @\n$      @\n       @@\n176  DEGREE SIGN\n  ___ @\n / _ \\\\@\n/ // /@\n\\\\___/ @\n $    @\n      @@\n177  PLUS-MINUS SIGN\n      __ @\n   __/ /_@\n  /_  __/@\n __/_/_  @\n/_____/  @\n         @@\n178  SUPERSCRIPT TWO\n   ___ @\n  |_  |@\n / __/ @\n/____/ @\n $     @\n       @@\n179  SUPERSCRIPT THREE\n   ____@\n  |_  /@\n _/_ < @\n/____/ @\n $     @\n       @@\n180  ACUTE ACCENT\n  __@\n /_/@\n  $ @\n $  @\n$   @\n    @@\n181  MICRO SIGN\n          @\n    __  __@\n   / / / /@\n  / /_/ / @\n / ._,_/  @\n/_/       @@\n182  PILCROW SIGN\n  _______@\n / _    /@\n/ (/ / / @\n\\\\_  / /  @\n /_/_/   @\n         @@\n183  MIDDLE DOT\n   @\n _ @\n(_)@\n $ @\n$  @\n   @@\n184  CEDILLA\n   @\n   @\n   @\n   @\n _ @\n/_)@@\n185  SUPERSCRIPT ONE\n  ___@\n <  /@\n / / @\n/_/  @\n$    @\n     @@\n186  MASCULINE ORDINAL INDICATOR\n   ___ @\n  / _ \\\\@\n _\\\\___/@\n/____/ @\n $     @\n       @@\n187  RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK\n____  @\n\\\\ \\\\ \\\\ @\n \\\\ \\\\ \\\\@\n / / /@\n/_/_/ @\n      @@\n188  VULGAR FRACTION ONE QUARTER\n  ___   __ @\n <  / _/_/ @\n / /_/_/___@\n/_//_// / /@\n /_/ /_  _/@\n      /_/  @@\n189  VULGAR FRACTION ONE HALF\n  ___   __   @\n <  / _/_/__ @\n / /_/_/|_  |@\n/_//_/ / __/ @\n /_/  /____/ @\n             @@\n190  VULGAR FRACTION THREE QUARTERS\n   ____    __ @\n  |_  /  _/_/ @\n _/_ < _/_/___@\n/____//_// / /@\n    /_/ /_  _/@\n         /_/  @@\n191  INVERTED QUESTION MARK\n    _ @\n   (_)@\n _/ / @\n/ _/_ @\n\\\\___/ @\n      @@\n192  LATIN CAPITAL LETTER A WITH GRAVE\n    __ @\n   _\\\\_\\\\@\n  / _ |@\n / __ |@\n/_/ |_|@\n       @@\n193  LATIN CAPITAL LETTER A WITH ACUTE\n     __@\n   _/_/@\n  / _ |@\n / __ |@\n/_/ |_|@\n       @@\n194  LATIN CAPITAL LETTER A WITH CIRCUMFLEX\n     //|@\n   _|/||@\n  / _ | @\n / __ | @\n/_/ |_| @\n        @@\n195  LATIN CAPITAL LETTER A WITH TILDE\n     /\\\\//@\n   _//\\\\/ @\n  / _ |  @\n / __ |  @\n/_/ |_|  @\n         @@\n196  LATIN CAPITAL LETTER A WITH DIAERESIS\n    _  _ @\n   (_)(_)@\n  / _ |  @\n / __ |  @\n/_/ |_|  @\n         @@\n197  LATIN CAPITAL LETTER A WITH RING ABOVE\n    (())@\n   /   |@\n  / /| |@\n / ___ |@\n/_/  |_|@\n        @@\n198  LATIN CAPITAL LETTER AE\n    __________@\n   /     ____/@\n  / /|  __/   @\n / __  /___   @\n/_/ /_____/   @\n              @@\n199  LATIN CAPITAL LETTER C WITH CEDILLA\n   ______@\n  / ____/@\n / /     @\n/ /___   @\n\\\\____/   @\n /_)     @@\n200  LATIN CAPITAL LETTER E WITH GRAVE\n    __ @\n   _\\\\_\\\\@\n  / __/@\n / _/  @\n/___/  @\n       @@\n201  LATIN CAPITAL LETTER E WITH ACUTE\n     __@\n   _/_/@\n  / __/@\n / _/  @\n/___/  @\n       @@\n202  LATIN CAPITAL LETTER E WITH CIRCUMFLEX\n     //|@\n   _|/||@\n  / __/ @\n / _/   @\n/___/   @\n        @@\n203  LATIN CAPITAL LETTER E WITH DIAERESIS\n    _  _ @\n   (_)(_)@\n  / __/  @\n / _/    @\n/___/    @\n         @@\n204  LATIN CAPITAL LETTER I WITH GRAVE\n    __ @\n   _\\\\_\\\\@\n  /  _/@\n _/ /  @\n/___/  @\n       @@\n205  LATIN CAPITAL LETTER I WITH ACUTE\n     __@\n   _/_/@\n  /  _/@\n _/ /  @\n/___/  @\n       @@\n206  LATIN CAPITAL LETTER I WITH CIRCUMFLEX\n     //|@\n   _|/||@\n  /  _/ @\n _/ /   @\n/___/   @\n        @@\n207  LATIN CAPITAL LETTER I WITH DIAERESIS\n    _  _ @\n   (_)(_)@\n  /  _/  @\n _/ /    @\n/___/    @\n         @@\n208  LATIN CAPITAL LETTER ETH\n     ____ @\n    / __ \\\\@\n __/ /_/ /@\n/_  __/ / @\n /_____/  @\n          @@\n209  LATIN CAPITAL LETTER N WITH TILDE\n     /\\\\//@\n   _//\\\\/ @\n  / |/ / @\n /    /  @\n/_/|_/   @\n         @@\n210  LATIN CAPITAL LETTER O WITH GRAVE\n    __ @\n  __\\\\_\\\\@\n / __ \\\\@\n/ /_/ /@\n\\\\____/ @\n       @@\n211  LATIN CAPITAL LETTER O WITH ACUTE\n     __@\n  __/_/@\n / __ \\\\@\n/ /_/ /@\n\\\\____/ @\n       @@\n212  LATIN CAPITAL LETTER O WITH CIRCUMFLEX\n    //|@\n  _|/||@\n / __ \\\\@\n/ /_/ /@\n\\\\____/ @\n       @@\n213  LATIN CAPITAL LETTER O WITH TILDE\n    /\\\\//@\n  _//\\\\/ @\n / __ \\\\ @\n/ /_/ / @\n\\\\____/  @\n        @@\n214  LATIN CAPITAL LETTER O WITH DIAERESIS\n   _   _ @\n  (_)_(_)@\n / __ \\\\  @\n/ /_/ /  @\n\\\\____/   @\n         @@\n215  MULTIPLICATION SIGN\n     @\n     @\n /|/|@\n > < @\n|/|/ @\n     @@\n216  LATIN CAPITAL LETTER O WITH STROKE\n   _____ @\n  / _// \\\\@\n / //// /@\n/ //// / @\n\\\\_//__/  @\n         @@\n217  LATIN CAPITAL LETTER U WITH GRAVE\n    __  @\n  __\\\\_\\\\_@\n / / / /@\n/ /_/ / @\n\\\\____/  @\n        @@\n218  LATIN CAPITAL LETTER U WITH ACUTE\n     __ @\n  __/_/_@\n / / / /@\n/ /_/ / @\n\\\\____/  @\n        @@\n219  LATIN CAPITAL LETTER U WITH CIRCUMFLEX\n    //| @\n  _|/||_@\n / / / /@\n/ /_/ / @\n\\\\____/  @\n        @@\n220  LATIN CAPITAL LETTER U WITH DIAERESIS\n   _   _ @\n  (_) (_)@\n / / / / @\n/ /_/ /  @\n\\\\____/   @\n         @@\n221  LATIN CAPITAL LETTER Y WITH ACUTE\n   __ @\n__/_/_@\n\\\\ \\\\/ /@\n \\\\  / @\n /_/  @\n      @@\n222  LATIN CAPITAL LETTER THORN\n    __  @\n   / /_ @\n  / __ \\\\@\n / ____/@\n/_/     @\n        @@\n223  LATIN SMALL LETTER SHARP S\n     ____ @\n    / __ \\\\@\n   / / / /@\n  / /_| | @\n / //__/  @\n/_/       @@\n224  LATIN SMALL LETTER A WITH GRAVE\n    __  @\n  __\\\\_\\\\_@\n / __ \\`/@\n/ /_/ / @\n\\\\__,_/  @\n        @@\n225  LATIN SMALL LETTER A WITH ACUTE\n     __ @\n  __/_/_@\n / __ \\`/@\n/ /_/ / @\n\\\\__,_/  @\n        @@\n226  LATIN SMALL LETTER A WITH CIRCUMFLEX\n    //| @\n  _|/||_@\n / __ \\`/@\n/ /_/ / @\n\\\\__,_/  @\n        @@\n227  LATIN SMALL LETTER A WITH TILDE\n    /\\\\//@\n  _//\\\\/_@\n / __ \\`/@\n/ /_/ / @\n\\\\__,_/  @\n        @@\n228  LATIN SMALL LETTER A WITH DIAERESIS\n   _   _ @\n  (_)_(_)@\n / __ \\`/ @\n/ /_/ /  @\n\\\\__,_/   @\n         @@\n229  LATIN SMALL LETTER A WITH RING ABOVE\n     __ @\n  __(())@\n / __ \\`/@\n/ /_/ / @\n\\\\__,_/  @\n        @@\n230  LATIN SMALL LETTER AE\n           @\n  ____ ___ @\n / __ \\` _ \\\\@\n/ /_/   __/@\n\\\\__,_____/ @\n           @@\n231  LATIN SMALL LETTER C WITH CEDILLA\n       @\n  _____@\n / ___/@\n/ /__  @\n\\\\___/  @\n/_)    @@\n232  LATIN SMALL LETTER E WITH GRAVE\n   __ @\n  _\\\\_\\\\@\n / _ \\\\@\n/  __/@\n\\\\___/ @\n      @@\n233  LATIN SMALL LETTER E WITH ACUTE\n    __@\n  _/_/@\n / _ \\\\@\n/  __/@\n\\\\___/ @\n      @@\n234  LATIN SMALL LETTER E WITH CIRCUMFLEX\n    //|@\n  _|/||@\n / _ \\\\ @\n/  __/ @\n\\\\___/  @\n       @@\n235  LATIN SMALL LETTER E WITH DIAERESIS\n   _  _ @\n  (_)(_)@\n / _ \\\\  @\n/  __/  @\n\\\\___/   @\n        @@\n236  LATIN SMALL LETTER I WITH GRAVE\n   __ @\n   \\\\_\\\\@\n  / / @\n / /  @\n/_/   @\n      @@\n237  LATIN SMALL LETTER I WITH ACUTE\n    __@\n   /_/@\n  / / @\n / /  @\n/_/   @\n      @@\n238  LATIN SMALL LETTER I WITH CIRCUMFLEX\n    //|@\n   |/||@\n  / /  @\n / /   @\n/_/    @\n       @@\n239  LATIN SMALL LETTER I WITH DIAERESIS\n  _   _ @\n (_)_(_)@\n  / /   @\n / /    @\n/_/     @\n        @@\n240  LATIN SMALL LETTER ETH\n     || @\n    =||=@\n ___ || @\n/ __\\` | @\n\\\\____/  @\n        @@\n241  LATIN SMALL LETTER N WITH TILDE\n     /\\\\//@\n   _//\\\\/ @\n  / __ \\\\ @\n / / / / @\n/_/ /_/  @\n         @@\n242  LATIN SMALL LETTER O WITH GRAVE\n    __ @\n  __\\\\_\\\\@\n / __ \\\\@\n/ /_/ /@\n\\\\____/ @\n       @@\n243  LATIN SMALL LETTER O WITH ACUTE\n     __@\n  __/_/@\n / __ \\\\@\n/ /_/ /@\n\\\\____/ @\n       @@\n244  LATIN SMALL LETTER O WITH CIRCUMFLEX\n    //|@\n  _|/||@\n / __ \\\\@\n/ /_/ /@\n\\\\____/ @\n       @@\n245  LATIN SMALL LETTER O WITH TILDE\n    /\\\\//@\n  _//\\\\/ @\n / __ \\\\ @\n/ /_/ / @\n\\\\____/  @\n        @@\n246  LATIN SMALL LETTER O WITH DIAERESIS\n   _   _ @\n  (_)_(_)@\n / __ \\\\  @\n/ /_/ /  @\n\\\\____/   @\n         @@\n247  DIVISION SIGN\n       @\n    _  @\n __(_)_@\n/_____/@\n (_)   @\n       @@\n248  LATIN SMALL LETTER O WITH STROKE\n        @\n  _____ @\n / _// \\\\@\n/ //// /@\n\\\\_//__/ @\n        @@\n249  LATIN SMALL LETTER U WITH GRAVE\n    __  @\n  __\\\\_\\\\_@\n / / / /@\n/ /_/ / @\n\\\\__,_/  @\n        @@\n250  LATIN SMALL LETTER U WITH ACUTE\n     __ @\n  __/_/_@\n / / / /@\n/ /_/ / @\n\\\\__,_/  @\n        @@\n251  LATIN SMALL LETTER U WITH CIRCUMFLEX\n    //| @\n  _|/||_@\n / / / /@\n/ /_/ / @\n\\\\__,_/  @\n        @@\n252  LATIN SMALL LETTER U WITH DIAERESIS\n   _   _ @\n  (_) (_)@\n / / / / @\n/ /_/ /  @\n\\\\__,_/   @\n         @@\n253  LATIN SMALL LETTER Y WITH ACUTE\n      __ @\n   __/_/_@\n  / / / /@\n / /_/ / @\n \\\\__, /  @\n/____/   @@\n254  LATIN SMALL LETTER THORN\n     __  @\n    / /_ @\n   / __ \\\\@\n  / /_/ /@\n / .___/ @\n/_/      @@\n255  LATIN SMALL LETTER Y WITH DIAERESIS\n    _   _ @\n   (_) (_)@\n  / / / / @\n / /_/ /  @\n \\\\__, /   @\n/____/    @@\n`","export default `flf2a$ 5 4 14 15 10 0 22415\nSmSlant by Glenn Chappell 6/93 - based on Small & Slant\nIncludes ISO Latin-1\nfiglet release 2.1 -- 12 Aug 1994\nPermission is hereby given to modify this font, as long as the\nmodifier's name is placed on a comment line.\n\nModified by Paul Burton <solution@earthlink.net> 12/96 to include new parameter\nsupported by FIGlet and FIGWin.  May also be slightly modified for better use\nof new full-width/kern/smush alternatives, but default output is NOT changed.\n\n    $@\n   $ @\n  $  @\n $   @\n$    @@\n   __@\n  / /@\n /_/ @\n(_)  @\n     @@\n _ _ @\n( | )@\n|/|/ @\n$    @\n     @@\n     ____ @\n  __/ / /_@\n /_  . __/@\n/_    __/ @\n /_/_/    @@\n     @\n  _//@\n (_-<@\n/ __/@\n//   @@\n _   __@\n(_)_/_/@\n _/_/_ @\n/_/ (_)@\n       @@\n  ____   @\n / __/___@\n > _/_ _/@\n|_____/  @\n         @@\n _ @\n( )@\n|/ @\n$  @\n   @@\n    __@\n  _/_/@\n / /  @\n/ /   @\n|_|   @@\n    _ @\n   | |@\n   / /@\n _/_/ @\n/_/   @@\n    @\n _/|@\n> _<@\n|/  @\n    @@\n    __ @\n __/ /_@\n/_  __/@\n /_/   @\n       @@\n   @\n   @\n _ @\n( )@\n|/ @@\n     @\n ____@\n/___/@\n $   @\n     @@\n   @\n   @\n _ @\n(_)@\n   @@\n     __@\n   _/_/@\n _/_/  @\n/_/    @\n       @@\n  ___ @\n / _ \\\\@\n/ // /@\n\\\\___/ @\n      @@\n  ___@\n <  /@\n / / @\n/_/  @\n     @@\n   ___ @\n  |_  |@\n / __/ @\n/____/ @\n       @@\n   ____@\n  |_  /@\n _/_ < @\n/____/ @\n       @@\n  ____@\n / / /@\n/_  _/@\n /_/  @\n      @@\n   ____@\n  / __/@\n /__ \\\\ @\n/____/ @\n       @@\n  ____@\n / __/@\n/ _ \\\\ @\n\\\\___/ @\n      @@\n ____@\n/_  /@\n / / @\n/_/  @\n     @@\n  ___ @\n ( _ )@\n/ _  |@\n\\\\___/ @\n      @@\n  ___ @\n / _ \\\\@\n \\\\_, /@\n/___/ @\n      @@\n   _ @\n  (_)@\n _   @\n(_)  @\n     @@\n   _ @\n  (_)@\n _   @\n( )  @\n|/   @@\n  __@\n / /@\n< < @\n \\\\_\\\\@\n    @@\n      @\n  ____@\n /___/@\n/___/ @\n      @@\n__  @\n\\\\ \\\\ @\n > >@\n/_/ @\n    @@\n ___ @\n/__ \\\\@\n /__/@\n(_)  @\n     @@\n  _____ @\n / ___ \\\\@\n/ / _ \\`/@\n\\\\ \\\\_,_/ @\n \\\\___/  @@\n   ___ @\n  / _ |@\n / __ |@\n/_/ |_|@\n       @@\n   ___ @\n  / _ )@\n / _  |@\n/____/ @\n       @@\n  _____@\n / ___/@\n/ /__  @\n\\\\___/  @\n       @@\n   ___ @\n  / _ \\\\@\n / // /@\n/____/ @\n       @@\n   ____@\n  / __/@\n / _/  @\n/___/  @\n       @@\n   ____@\n  / __/@\n / _/  @\n/_/    @\n       @@\n  _____@\n / ___/@\n/ (_ / @\n\\\\___/  @\n       @@\n   __ __@\n  / // /@\n / _  / @\n/_//_/  @\n        @@\n   ____@\n  /  _/@\n _/ /  @\n/___/  @\n       @@\n     __@\n __ / /@\n/ // / @\n\\\\___/  @\n       @@\n   __ __@\n  / //_/@\n / ,<   @\n/_/|_|  @\n        @@\n   __ @\n  / / @\n / /__@\n/____/@\n      @@\n   __  ___@\n  /  |/  /@\n / /|_/ / @\n/_/  /_/  @\n          @@\n   _  __@\n  / |/ /@\n /    / @\n/_/|_/  @\n        @@\n  ____ @\n / __ \\\\@\n/ /_/ /@\n\\\\____/ @\n       @@\n   ___ @\n  / _ \\\\@\n / ___/@\n/_/    @\n       @@\n  ____ @\n / __ \\\\@\n/ /_/ /@\n\\\\___\\\\_\\\\@\n       @@\n   ___ @\n  / _ \\\\@\n / , _/@\n/_/|_| @\n       @@\n   ____@\n  / __/@\n _\\\\ \\\\  @\n/___/  @\n       @@\n ______@\n/_  __/@\n / /   @\n/_/    @\n       @@\n  __  __@\n / / / /@\n/ /_/ / @\n\\\\____/  @\n        @@\n  _   __@\n | | / /@\n | |/ / @\n |___/  @\n        @@\n  _      __@\n | | /| / /@\n | |/ |/ / @\n |__/|__/  @\n           @@\n   _  __@\n  | |/_/@\n _>  <  @\n/_/|_|  @\n        @@\n __  __@\n \\\\ \\\\/ /@\n  \\\\  / @\n  /_/  @\n       @@\n  ____@\n /_  /@\n  / /_@\n /___/@\n      @@\n    ___@\n   / _/@\n  / /  @\n / /   @\n/__/   @@\n__   @\n\\\\ \\\\  @\n \\\\ \\\\ @\n  \\\\_\\\\@\n     @@\n    ___@\n   /  /@\n   / / @\n _/ /  @\n/__/   @@\n //|@\n|/||@\n $  @\n$   @\n    @@\n     @\n     @\n     @\n ____@\n/___/@@\n _ @\n( )@\n V @\n$  @\n   @@\n      @\n ___ _@\n/ _ \\`/@\n\\\\_,_/ @\n      @@\n   __ @\n  / / @\n / _ \\\\@\n/_.__/@\n      @@\n     @\n ____@\n/ __/@\n\\\\__/ @\n     @@\n     __@\n ___/ /@\n/ _  / @\n\\\\_,_/  @\n       @@\n     @\n ___ @\n/ -_)@\n\\\\__/ @\n     @@\n   ___@\n  / _/@\n / _/ @\n/_/   @\n      @@\n       @\n  ___ _@\n / _ \\`/@\n \\\\_, / @\n/___/  @@\n   __ @\n  / / @\n / _ \\\\@\n/_//_/@\n      @@\n   _ @\n  (_)@\n / / @\n/_/  @\n     @@\n      _ @\n     (_)@\n    / / @\n __/ /  @\n|___/   @@\n   __  @\n  / /__@\n /  '_/@\n/_/\\\\_\\\\ @\n       @@\n   __@\n  / /@\n / / @\n/_/  @\n     @@\n       @\n  __ _ @\n /  ' \\\\@\n/_/_/_/@\n       @@\n      @\n  ___ @\n / _ \\\\@\n/_//_/@\n      @@\n     @\n ___ @\n/ _ \\\\@\n\\\\___/@\n     @@\n       @\n   ___ @\n  / _ \\\\@\n / .__/@\n/_/    @@\n      @\n ___ _@\n/ _ \\`/@\n\\\\_, / @\n /_/  @@\n      @\n  ____@\n / __/@\n/_/   @\n      @@\n     @\n  ___@\n (_-<@\n/___/@\n     @@\n  __ @\n / /_@\n/ __/@\n\\\\__/ @\n     @@\n      @\n __ __@\n/ // /@\n\\\\_,_/ @\n      @@\n      @\n _  __@\n| |/ /@\n|___/ @\n      @@\n        @\n _    __@\n| |/|/ /@\n|__,__/ @\n        @@\n      @\n __ __@\n \\\\ \\\\ /@\n/_\\\\_\\\\ @\n      @@\n       @\n  __ __@\n / // /@\n \\\\_, / @\n/___/  @@\n    @\n ___@\n/_ /@\n/__/@\n    @@\n    __@\n  _/_/@\n_/ /  @\n/ /   @\n\\\\_\\\\   @@\n    __@\n   / /@\n  / / @\n / /  @\n/_/   @@\n   __  @\n   \\\\ \\\\ @\n   / /_@\n _/_/  @\n/_/    @@\n /\\\\//@\n//\\\\/ @\n $   @\n$    @\n     @@\n   _  _ @\n  (_)(_)@\n / - |  @\n/_/|_|  @\n        @@\n  _   _ @\n (_)_(_)@\n/ __ \\\\  @\n\\\\____/  @\n        @@\n  _   _ @\n (_) (_)@\n/ /_/ / @\n\\\\____/  @\n        @@\n  _  _ @\n (_)(_)@\n/ _ \\`/ @\n\\\\_,_/  @\n       @@\n  _  _ @\n (_)(_)@\n/ _ \\\\  @\n\\\\___/  @\n       @@\n  _  _ @\n (_)(_)@\n/ // / @\n\\\\_,_/  @\n       @@\n    ____ @\n   / _  )@\n  / /< < @\n / //__/ @\n/_/      @@\n160  NO-BREAK SPACE\n    $@\n   $ @\n  $  @\n $   @\n$    @@\n161  INVERTED EXCLAMATION MARK\n   _ @\n  (_)@\n / / @\n/_/  @\n     @@\n162  CENT SIGN\n     @\n __//@\n/ __/@\n\\\\ _/ @\n//   @@\n163  POUND SIGN\n     __ @\n  __/__|@\n /_ _/_ @\n(_,___/ @\n        @@\n164  CURRENCY SIGN\n   /|_/|@\n  | . / @\n /_  |  @\n|/ |/   @\n        @@\n165  YEN SIGN\n    ____@\n  _| / /@\n /_  __/@\n/_  __/ @\n /_/    @@\n166  BROKEN BAR\n    __@\n   / /@\n  /_/ @\n / /  @\n/_/   @@\n167  SECTION SIGN\n     __ @\n   _/ _)@\n  / | | @\n | |_/  @\n(__/    @@\n168  DIAERESIS\n _   _ @\n(_) (_)@\n $   $ @\n$   $  @\n       @@\n169  COPYRIGHT SIGN\n   ____  @\n  / ___\\\\ @\n / / _/ |@\n| |__/ / @\n \\\\____/  @@\n170  FEMININE ORDINAL INDICATOR\n   ___ _@\n  / _ \\`/@\n _\\\\_,_/ @\n/____/  @\n        @@\n171  LEFT-POINTING DOUBLE ANGLE QUOTATION MARK\n  ____@\n / / /@\n< < < @\n \\\\_\\\\_\\\\@\n      @@\n172  NOT SIGN\n     @\n ____@\n/_  /@\n /_/ @\n     @@\n173  SOFT HYPHEN\n    @\n ___@\n/__/@\n $  @\n    @@\n174  REGISTERED SIGN\n   ____  @\n  / __ \\\\ @\n / / -) |@\n| //\\\\\\\\ / @\n \\\\____/  @@\n175  MACRON\n ____@\n/___/@\n $   @\n$    @\n     @@\n176  DEGREE SIGN\n  __ @\n /. |@\n|__/ @\n $   @\n     @@\n177  PLUS-MINUS SIGN\n      __ @\n   __/ /_@\n  /_  __/@\n __/_/_  @\n/_____/  @@\n178  SUPERSCRIPT TWO\n  __ @\n |_ )@\n/__| @\n $   @\n     @@\n179  SUPERSCRIPT THREE\n  ___@\n |_ /@\n/__) @\n $   @\n     @@\n180  ACUTE ACCENT\n __@\n/_/@\n $ @\n$  @\n   @@\n181  MICRO SIGN\n        @\n   __ __@\n  / // /@\n / .,_/ @\n/_/     @@\n182  PILCROW SIGN\n  _____@\n /    /@\n|_ / / @\n/_/_/  @\n       @@\n183  MIDDLE DOT\n   @\n _ @\n(_)@\n$  @\n   @@\n184  CEDILLA\n   @\n   @\n   @\n _ @\n/_)@@\n185  SUPERSCRIPT ONE\n  __@\n < /@\n/_/ @\n$   @\n    @@\n186  MASCULINE ORDINAL INDICATOR\n   ___ @\n  / _ \\\\@\n _\\\\___/@\n/____/ @\n       @@\n187  RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK\n____  @\n\\\\ \\\\ \\\\ @\n > > >@\n/_/_/ @\n      @@\n188  VULGAR FRACTION ONE QUARTER\n  __  __   @\n < /_/_/___@\n/_//_//_' /@\n /_/   /_/ @\n           @@\n189  VULGAR FRACTION ONE HALF\n  __  __  @\n < /_/_/_ @\n/_//_/|_ )@\n /_/ /__| @\n          @@\n190  VULGAR FRACTION THREE QUARTERS\n  ___  __   @\n |_ /_/_/___@\n/__)/_//_' /@\n  /_/   /_/ @\n            @@\n191  INVERTED QUESTION MARK\n   _ @\n _(_)@\n/ _/_@\n\\\\___/@\n     @@\n192  LATIN CAPITAL LETTER A WITH GRAVE\n   __ @\n  _\\\\_\\\\@\n / - |@\n/_/|_|@\n      @@\n193  LATIN CAPITAL LETTER A WITH ACUTE\n    __@\n  _/_/@\n / - |@\n/_/|_|@\n      @@\n194  LATIN CAPITAL LETTER A WITH CIRCUMFLEX\n    //|@\n  _|/||@\n / - | @\n/_/|_| @\n       @@\n195  LATIN CAPITAL LETTER A WITH TILDE\n    /\\\\//@\n  _//\\\\/ @\n / - |  @\n/_/|_|  @\n        @@\n196  LATIN CAPITAL LETTER A WITH DIAERESIS\n   _  _ @\n  (_)(_)@\n / - |  @\n/_/|_|  @\n        @@\n197  LATIN CAPITAL LETTER A WITH RING ABOVE\n   (())@\n  / _ |@\n / __ |@\n/_/ |_|@\n       @@\n198  LATIN CAPITAL LETTER AE\n   _______@\n  / _  __/@\n / _  _/  @\n/_//___/  @\n          @@\n199  LATIN CAPITAL LETTER C WITH CEDILLA\n  _____@\n / ___/@\n/ /__  @\n\\\\___/  @\n/_)    @@\n200  LATIN CAPITAL LETTER E WITH GRAVE\n  __ @\n  \\\\_\\\\@\n / -<@\n/__< @\n     @@\n201  LATIN CAPITAL LETTER E WITH ACUTE\n    __@\n  _/_/@\n / -< @\n/__<  @\n      @@\n202  LATIN CAPITAL LETTER E WITH CIRCUMFLEX\n   //|@\n  |/||@\n / -< @\n/__<  @\n      @@\n203  LATIN CAPITAL LETTER E WITH DIAERESIS\n  _  _ @\n (_)(_)@\n / -<  @\n/__<   @\n       @@\n204  LATIN CAPITAL LETTER I WITH GRAVE\n   __  @\n  _\\\\_\\\\ @\n /_ __/@\n/____/ @\n       @@\n205  LATIN CAPITAL LETTER I WITH ACUTE\n     __@\n  __/_/@\n /_ __/@\n/____/ @\n       @@\n206  LATIN CAPITAL LETTER I WITH CIRCUMFLEX\n    //|@\n  _|/||@\n /_ __/@\n/____/ @\n       @@\n207  LATIN CAPITAL LETTER I WITH DIAERESIS\n   _  _ @\n  (_)(_)@\n /_ __/ @\n/____/  @\n        @@\n208  LATIN CAPITAL LETTER ETH\n   ____ @\n _/ __ \\\\@\n/_ _// /@\n/_____/ @\n        @@\n209  LATIN CAPITAL LETTER N WITH TILDE\n     /\\\\//@\n  __//\\\\/ @\n /  |/ / @\n/_/|__/  @\n         @@\n210  LATIN CAPITAL LETTER O WITH GRAVE\n  __  @\n _\\\\_\\\\ @\n/ __ \\\\@\n\\\\____/@\n      @@\n211  LATIN CAPITAL LETTER O WITH ACUTE\n    __@\n __/_/@\n/ __ \\\\@\n\\\\____/@\n      @@\n212  LATIN CAPITAL LETTER O WITH CIRCUMFLEX\n   //|@\n _|/||@\n/ __ \\\\@\n\\\\____/@\n      @@\n213  LATIN CAPITAL LETTER O WITH TILDE\n   /\\\\//@\n _//\\\\/ @\n/ __ \\\\ @\n\\\\____/ @\n       @@\n214  LATIN CAPITAL LETTER O WITH DIAERESIS\n  _   _ @\n (_)_(_)@\n/ __ \\\\  @\n\\\\____/  @\n        @@\n215  MULTIPLICATION SIGN\n     @\n /|/|@\n > < @\n|/|/ @\n     @@\n216  LATIN CAPITAL LETTER O WITH STROKE\n  _____ @\n / _// \\\\@\n/ //// /@\n\\\\_//__/ @\n        @@\n217  LATIN CAPITAL LETTER U WITH GRAVE\n   __  @\n __\\\\_\\\\ @\n/ /_/ /@\n\\\\____/ @\n       @@\n218  LATIN CAPITAL LETTER U WITH ACUTE\n     __@\n __ /_/@\n/ /_/ /@\n\\\\____/ @\n       @@\n219  LATIN CAPITAL LETTER U WITH CIRCUMFLEX\n    //|@\n __|/||@\n/ /_/ /@\n\\\\____/ @\n       @@\n220  LATIN CAPITAL LETTER U WITH DIAERESIS\n  _   _ @\n (_) (_)@\n/ /_/ / @\n\\\\____/  @\n        @@\n221  LATIN CAPITAL LETTER Y WITH ACUTE\n   __@\n__/_/@\n\\\\ V /@\n /_/ @\n     @@\n222  LATIN CAPITAL LETTER THORN\n   __ @\n  / / @\n / -_)@\n/_/   @\n      @@\n223  LATIN SMALL LETTER SHARP S\n    ____ @\n   / _  )@\n  / /< < @\n / //__/ @\n/_/      @@\n224  LATIN SMALL LETTER A WITH GRAVE\n  __  @\n _\\\\_\\\\_@\n/ _ \\`/@\n\\\\_,_/ @\n      @@\n225  LATIN SMALL LETTER A WITH ACUTE\n    __@\n __/_/@\n/ _ \\`/@\n\\\\_,_/ @\n      @@\n226  LATIN SMALL LETTER A WITH CIRCUMFLEX\n   //|@\n _|/||@\n/ _ \\`/@\n\\\\_,_/ @\n      @@\n227  LATIN SMALL LETTER A WITH TILDE\n   /\\\\//@\n _//\\\\/ @\n/ _ \\`/ @\n\\\\_,_/  @\n       @@\n228  LATIN SMALL LETTER A WITH DIAERESIS\n  _  _ @\n (_)(_)@\n/ _ \\`/ @\n\\\\_,_/  @\n       @@\n229  LATIN SMALL LETTER A WITH RING ABOVE\n   __ @\n _(())@\n/ _ \\`/@\n\\\\_,_/ @\n      @@\n230  LATIN SMALL LETTER AE\n         @\n ___ ___ @\n/ _ \\` -_)@\n\\\\_,____/ @\n         @@\n231  LATIN SMALL LETTER C WITH CEDILLA\n     @\n ____@\n/ __/@\n\\\\__/ @\n/_)  @@\n232  LATIN SMALL LETTER E WITH GRAVE\n  __ @\n _\\\\_\\\\@\n/ -_)@\n\\\\__/ @\n     @@\n233  LATIN SMALL LETTER E WITH ACUTE\n   __@\n _/_/@\n/ -_)@\n\\\\__/ @\n     @@\n234  LATIN SMALL LETTER E WITH CIRCUMFLEX\n  //|@\n |/||@\n/ -_)@\n\\\\__/ @\n     @@\n235  LATIN SMALL LETTER E WITH DIAERESIS\n _  _ @\n(_)(_)@\n/ -_) @\n\\\\__/  @\n      @@\n236  LATIN SMALL LETTER I WITH GRAVE\n  __ @\n  \\\\_\\\\@\n / / @\n/_/  @\n     @@\n237  LATIN SMALL LETTER I WITH ACUTE\n   __@\n  /_/@\n / / @\n/_/  @\n     @@\n238  LATIN SMALL LETTER I WITH CIRCUMFLEX\n   //|@\n  |/||@\n / /  @\n/_/   @\n      @@\n239  LATIN SMALL LETTER I WITH DIAERESIS\n _   _ @\n(_)_(_)@\n / /   @\n/_/    @\n       @@\n240  LATIN SMALL LETTER ETH\n   _||_@\n __ || @\n/ _\\` | @\n\\\\___/  @\n       @@\n241  LATIN SMALL LETTER N WITH TILDE\n    /\\\\//@\n  _//\\\\/ @\n / _ \\\\  @\n/_//_/  @\n        @@\n242  LATIN SMALL LETTER O WITH GRAVE\n  __ @\n _\\\\_\\\\@\n/ _ \\\\@\n\\\\___/@\n     @@\n243  LATIN SMALL LETTER O WITH ACUTE\n   __@\n _/_/@\n/ _ \\\\@\n\\\\___/@\n     @@\n244  LATIN SMALL LETTER O WITH CIRCUMFLEX\n   //|@\n _|/||@\n/ _ \\\\ @\n\\\\___/ @\n      @@\n245  LATIN SMALL LETTER O WITH TILDE\n   /\\\\//@\n _//\\\\/ @\n/ _ \\\\  @\n\\\\___/  @\n       @@\n246  LATIN SMALL LETTER O WITH DIAERESIS\n  _  _ @\n (_)(_)@\n/ _ \\\\  @\n\\\\___/  @\n       @@\n247  DIVISION SIGN\n   _ @\n _(_)@\n/___/@\n(_)  @\n     @@\n248  LATIN SMALL LETTER O WITH STROKE\n     @\n ___ @\n/ //\\\\@\n\\\\//_/@\n     @@\n249  LATIN SMALL LETTER U WITH GRAVE\n   __ @\n __\\\\_\\\\@\n/ // /@\n\\\\_,_/ @\n      @@\n250  LATIN SMALL LETTER U WITH ACUTE\n    __@\n __/_/@\n/ // /@\n\\\\_,_/ @\n      @@\n251  LATIN SMALL LETTER U WITH CIRCUMFLEX\n   //|@\n _|/||@\n/ // /@\n\\\\_,_/ @\n      @@\n252  LATIN SMALL LETTER U WITH DIAERESIS\n  _  _ @\n (_)(_)@\n/ // / @\n\\\\_,_/  @\n       @@\n253  LATIN SMALL LETTER Y WITH ACUTE\n     __@\n  __/_/@\n / // /@\n \\\\_, / @\n/___/  @@\n254  LATIN SMALL LETTER THORN\n    __ @\n   / / @\n  / _ \\\\@\n / .__/@\n/_/    @@\n255  LATIN SMALL LETTER Y WITH DIAERESIS\n   _  _ @\n  (_)(_)@\n / // / @\n \\\\_, /  @\n/___/   @@\n`","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n"],"sourceRoot":""}