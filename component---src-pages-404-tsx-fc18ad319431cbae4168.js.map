{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/styles/variables.ts","webpack:///./src/styles/mixins.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/normalize.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_5__","_components_Page__WEBPACK_IMPORTED_MODULE_3__","_components_Container__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","__webpack_require__","d","__webpack_exports__","colors","fonts","breakpoints","widths","dimensions","brand","yellow","blue","purple","green","pink","orange","red","teal","ui","terminal","traffic","code","white","black","sansSerif","serif","monospace","xs","sm","md","lg","xl","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","getEmSize","_variables__WEBPACK_IMPORTED_MODULE_0__","size","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","StyledPage","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","Page","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","StyledContainer","Container","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","normalize","darken","transparentize","StyledLayoutRoot","styled_base_browser_esm","name","styles","LayoutRoot","core_browser_esm","react","css","StyledLayoutMain","LayoutMain","IndexLayout","gatsby_browser_entry","components_LayoutRoot","Helmet_default","title","site","siteMetadata","meta","content","description","keywords","components_LayoutMain","_991718019"],"mappings":"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","file":"component---src-pages-404-tsx-fc18ad319431cbae4168.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\nconst NotFoundPage = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>404: Page not found.</h1>\n        <p>\n          You've hit the void. <Link to=\"/\">Go back.</Link>\n        </p>\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default NotFoundPage\n","/* eslint-disable max-len */\n\nexport const colors = {\n  brand: '#663399', // Primary, default header and links\n  yellow: 'rgb(241,217,29)', // JavaScript Brand Yellow\n  blue: 'rgb(24,122,191)', // TypeScript Brand Blue\n  purple: 'rgb(102, 51,153)', // Gatsby Brand Purple\n  green: 'rgb(104, 159, 99)', // Node JS Brand Green\n  pink: 'rgb(229,53,171)', // GraphQL Brand Pink\n  orange: 'rgb(241,101,41)', // HTML5 Brand Orange\n  red: 'rgb(204,52,45)', // Ruby Brand Red\n  teal: 'rgb(94,211,243)', // React Brand Teal\n  ui: {\n    terminal: 'rgb(30, 34, 41)', // Terminal Background\n    traffic: {\n      // Terminal close buttons\n      red: 'rgb(236, 97, 86)',\n      yellow: 'rgb(246, 193, 81)',\n      green: 'rgb(99, 199, 86)'\n    }\n  },\n  code: 'rgb(254, 125, 232)', // Default code/pre color\n  white: '#fff', // Used in header component, with polished\n  black: '#000' // Body text color, heading and strong reset\n}\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n}\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n}\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n}\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n}\n\nexport const heights = {\n  header: 60\n}\n","import { dimensions } from './variables'\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { dimensions } from '../styles/variables'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\n\nexport default Container\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { dimensions, fonts, colors, breakpoints } from './variables'\nimport { getEmSize } from './mixins'\nimport { darken, transparentize } from 'polished'\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${darken(0.2, colors.white)};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${darken(0.2, colors.white)};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${transparentize(0.9, colors.white)};\n        }\n        tr {\n          background-color: ${transparentize(0.9, colors.white)};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${darken(0.2, colors.white)};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${darken(0.2, colors.white)};\n    color: ${darken(0.4, colors.white)};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`\n","import * as React from 'react'\nimport { Global, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport normalize from '../styles/normalize'\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  height: 100vh;\n  overflow-y: hidden;\n`\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.FC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n)\n\nexport default LayoutMain\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\nimport '../styles/normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport LayoutMain from '../components/LayoutMain'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n    }\n  }\n}\n\nconst IndexLayout: React.FC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: data.site.siteMetadata.keywords }\n          ]}\n        />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n)\n\nexport default IndexLayout\n"],"sourceRoot":""}