{"version":3,"sources":["webpack:///./src/templates/blog.tsx"],"names":["Post","location","history","BlogTemplate","data","markdownRemark","frontmatter","category","date","title","author","site","siteMetadata","text","fallback","to","toLowerCase","name","dangerouslySetInnerHTML","__html","html","href","encodeURI","email","query"],"mappings":"kQAkCMA,EAAO,mBAAH,oBAAG,CAAH,4EAMFC,EAAaC,gBAAbD,SA2COE,UAzCmC,SAAC,GAAa,IAAXC,EAAW,EAAXA,KAAW,EAC5BA,EAAKC,eAAeC,YAA9CC,EADsD,EACtDA,SAAUC,EAD4C,EAC5CA,KAAMC,EADsC,EACtCA,MAChBC,EAAWN,EAAKO,KAAKC,aAArBF,OACR,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAOG,KAASN,EAAL,QAAsBO,SAAS,OAC1C,qBACE,YAAC,OAAD,CAAMC,GAAOR,EAASS,cAAd,SAAR,gBAA0DT,EAA1D,gBAEF,uBACA,sBAAKE,GACL,yCACgBD,EADhB,OAC0BE,EAAOO,MAEjC,uBAEA,YAACjB,EAAD,CAAMkB,wBAAyB,CAAEC,OAAQf,EAAKC,eAAee,QAC7D,uBACA,wDAEE,uBAFF,SAGS,IACP,iBACEC,KAAMC,UAAU,UACJZ,EAAOa,MADJ,uBACgCd,EADhC,sDAC2FR,EAASoB,KADpG,kCADjB,uCAKuCX,EAAOa,OAThD,KAaA,qBACE,YAAC,OAAD,CAAMR,GAAOR,EAASS,cAAd,SAAR,gBAA0DT,EAA1D,oBASL,IAAMiB,EAAQ","file":"component---src-templates-blog-tsx-90032e03503febc34809.js","sourcesContent":["import * as React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { globalHistory as history } from '@reach/router'\n\nimport Page from '../components/Page'\nimport Terminal from '../components/Terminal'\nimport IndexLayout from '../layouts'\nimport ASCII from 'react-rainbow-ascii'\nimport styled from '@emotion/styled'\n\ninterface BlogTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        author: {\n          name: string\n          email: string\n        }\n      }\n    }\n    markdownRemark: {\n      html: string\n      excerpt: string\n      frontmatter: {\n        title: string\n        date: string\n        category: string\n      }\n    }\n  }\n}\n\nconst Post = styled.div`\n  .gatsby-resp-image-figcaption {\n    text-align: center;\n  }\n`\n\nconst { location } = history\n\nconst BlogTemplate: React.FC<BlogTemplateProps> = ({ data }) => {\n  const { category, date, title } = data.markdownRemark.frontmatter\n  const { author } = data.site.siteMetadata\n  return (\n    <IndexLayout>\n      <Page>\n        <Terminal>\n          <ASCII text={`${category} Blog`} fallback=\"h2\" />\n          <p>\n            <Link to={`${category.toLowerCase()}-blog`}>« go back to {category} Blog index</Link>\n          </p>\n          <br />\n          <h1>{title}</h1>\n          <small>\n            Published on {date} by {author.name}\n          </small>\n          <hr />\n          {/* eslint-disable-next-line react/no-danger */}\n          <Post dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n          <hr />\n          <p>\n            Thank you for reading this post.\n            <br />\n            Please{' '}\n            <a\n              href={encodeURI(\n                `mailto:${author.email}?subject=Your post: ${title}&body=This email is in response to your blog post: ${location.href}\\n\\nHere are my comments:\\n\\n`\n              )}\n            >\n              send an email with your comments to {author.email}\n            </a>\n            .\n          </p>\n          <p>\n            <Link to={`${category.toLowerCase()}-blog`}>« go back to {category} Blog index</Link>\n          </p>\n        </Terminal>\n      </Page>\n    </IndexLayout>\n  )\n}\nexport default BlogTemplate\n\nexport const query = graphql`\n  query BlogTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          email\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n        date(formatString: \"MMMM Do, YYYY\")\n        category\n      }\n    }\n  }\n`\n"],"sourceRoot":""}